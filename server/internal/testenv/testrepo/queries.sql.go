// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0
// source: queries.sql

package testrepo

import (
	"context"

	"github.com/google/uuid"
)

const listDeploymentTools = `-- name: ListDeploymentTools :many
SELECT id, project_id, deployment_id, openapiv3_document_id, confirm, confirm_prompt, summarizer, name, summary, description, openapiv3_operation, tags, x_gram, original_name, original_summary, original_description, server_env_var, default_server_url, security, http_method, path, schema_version, schema, header_settings, query_settings, path_settings, request_content_type, created_at, updated_at, deleted_at, deleted
FROM http_tool_definitions
WHERE deployment_id = $1
`

func (q *Queries) ListDeploymentTools(ctx context.Context, deploymentID uuid.UUID) ([]HttpToolDefinition, error) {
	rows, err := q.db.Query(ctx, listDeploymentTools, deploymentID)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	var items []HttpToolDefinition
	for rows.Next() {
		var i HttpToolDefinition
		if err := rows.Scan(
			&i.ID,
			&i.ProjectID,
			&i.DeploymentID,
			&i.Openapiv3DocumentID,
			&i.Confirm,
			&i.ConfirmPrompt,
			&i.Summarizer,
			&i.Name,
			&i.Summary,
			&i.Description,
			&i.Openapiv3Operation,
			&i.Tags,
			&i.XGram,
			&i.OriginalName,
			&i.OriginalSummary,
			&i.OriginalDescription,
			&i.ServerEnvVar,
			&i.DefaultServerUrl,
			&i.Security,
			&i.HttpMethod,
			&i.Path,
			&i.SchemaVersion,
			&i.Schema,
			&i.HeaderSettings,
			&i.QuerySettings,
			&i.PathSettings,
			&i.RequestContentType,
			&i.CreatedAt,
			&i.UpdatedAt,
			&i.DeletedAt,
			&i.Deleted,
		); err != nil {
			return nil, err
		}
		items = append(items, i)
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}
