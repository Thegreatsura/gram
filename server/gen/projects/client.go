// Code generated by goa v3.20.1, DO NOT EDIT.
//
// projects client
//
// Command:
// $ goa gen github.com/speakeasy-api/gram/design

package projects

import (
	"context"

	goa "goa.design/goa/v3/pkg"
)

// Client is the "projects" service client.
type Client struct {
	CreateProjectEndpoint goa.Endpoint
	ListProjectsEndpoint  goa.Endpoint
}

// NewClient initializes a "projects" service client given the endpoints.
func NewClient(createProject, listProjects goa.Endpoint) *Client {
	return &Client{
		CreateProjectEndpoint: createProject,
		ListProjectsEndpoint:  listProjects,
	}
}

// CreateProject calls the "createProject" endpoint of the "projects" service.
func (c *Client) CreateProject(ctx context.Context, p *CreateProjectPayload) (res *CreateProjectResult, err error) {
	var ires any
	ires, err = c.CreateProjectEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(*CreateProjectResult), nil
}

// ListProjects calls the "listProjects" endpoint of the "projects" service.
func (c *Client) ListProjects(ctx context.Context, p *ListProjectsPayload) (res *ListProjectsResult, err error) {
	var ires any
	ires, err = c.ListProjectsEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(*ListProjectsResult), nil
}
