// Code generated by goa v3.20.1, DO NOT EDIT.
//
// projects service
//
// Command:
// $ goa gen github.com/speakeasy-api/gram/design

package projects

import (
	"context"

	"goa.design/goa/v3/security"
)

// Manages projects in Gram.
type Service interface {
	// Create a new project.
	CreateProject(context.Context, *CreateProjectPayload) (res *CreateProjectResult, err error)
	// List all projects for an organization.
	ListProjects(context.Context, *ListProjectsPayload) (res *ListProjectsResult, err error)
}

// Auther defines the authorization functions to be implemented by the service.
type Auther interface {
	// APIKeyAuth implements the authorization logic for the APIKey security scheme.
	APIKeyAuth(ctx context.Context, key string, schema *security.APIKeyScheme) (context.Context, error)
}

// APIName is the name of the API as defined in the design.
const APIName = "gram"

// APIVersion is the version of the API as defined in the design.
const APIVersion = "0.0.1"

// ServiceName is the name of the service as defined in the design. This is the
// same value that is set in the endpoint request contexts under the ServiceKey
// key.
const ServiceName = "projects"

// MethodNames lists the service method names as defined in the design. These
// are the same values that are set in the endpoint request contexts under the
// MethodKey key.
var MethodNames = [2]string{"createProject", "listProjects"}

// CreateProjectPayload is the payload type of the projects service
// createProject method.
type CreateProjectPayload struct {
	SessionToken *string
	// The ID of the organization to create the project in
	OrganizationID string
	// The name of the project
	Name string
	// The slug of the project
	Slug Slug
}

// CreateProjectResult is the result type of the projects service createProject
// method.
type CreateProjectResult struct {
	// The created project
	Project *Project
}

// ListProjectsPayload is the payload type of the projects service listProjects
// method.
type ListProjectsPayload struct {
	SessionToken *string
	// The ID of the organization to list projects for
	OrganizationID string
}

// ListProjectsResult is the result type of the projects service listProjects
// method.
type ListProjectsResult struct {
	// The list of projects
	Projects []*ProjectEntry
}

type Project struct {
	// The ID of the project
	ID string
	// The name of the project
	Name string
	// The slug of the project
	Slug Slug
	// The ID of the organization that owns the project
	OrganizationID string
	// The creation date of the project.
	CreatedAt string
	// The last update date of the project.
	UpdatedAt string
}

type ProjectEntry struct {
	// The ID of the project
	ID string
	// The name of the project
	Name string
	// The slug of the project
	Slug Slug
}

// A short url-friendly label that uniquely identifies a resource.
type Slug string
