// Code generated by goa v3.20.1, DO NOT EDIT.
//
// deployments service
//
// Command:
// $ goa gen github.com/speakeasy-api/gram/design

package deployments

import (
	"context"

	"goa.design/goa/v3/security"
)

// Manages deployments of tools from upstream sources.
type Service interface {
	// Create a deployment to load tool definitions.
	GetDeployment(context.Context, *GetDeploymentPayload) (res *GetDeploymentResult, err error)
	// Create a deployment to load tool definitions.
	CreateDeployment(context.Context, *CreateDeploymentPayload) (res *CreateDeploymentResult, err error)
	// Create a new deployment with an additional OpenAPI 3.x document.
	AddOpenAPIv3Source(context.Context, *AddOpenAPIv3SourcePayload) (res *AddOpenAPIv3SourceResult, err error)
	// List all deployments in descending order of creation.
	ListDeployments(context.Context, *ListDeploymentsPayload) (res *ListDeploymentResult, err error)
}

// Auther defines the authorization functions to be implemented by the service.
type Auther interface {
	// APIKeyAuth implements the authorization logic for the APIKey security scheme.
	APIKeyAuth(ctx context.Context, key string, schema *security.APIKeyScheme) (context.Context, error)
}

// APIName is the name of the API as defined in the design.
const APIName = "gram"

// APIVersion is the version of the API as defined in the design.
const APIVersion = "0.0.1"

// ServiceName is the name of the service as defined in the design. This is the
// same value that is set in the endpoint request contexts under the ServiceKey
// key.
const ServiceName = "deployments"

// MethodNames lists the service method names as defined in the design. These
// are the same values that are set in the endpoint request contexts under the
// MethodKey key.
var MethodNames = [4]string{"getDeployment", "createDeployment", "addOpenAPIv3Source", "listDeployments"}

// AddOpenAPIv3SourcePayload is the payload type of the deployments service
// addOpenAPIv3Source method.
type AddOpenAPIv3SourcePayload struct {
	SessionToken     *string
	ProjectSlugInput *string
	// The ID of the uploaded asset.
	AssetID string
	// The name to give the document as it will be displayed in UIs.
	Name string
	// The slug to give the document as it will be displayed in URLs.
	Slug Slug
}

// AddOpenAPIv3SourceResult is the result type of the deployments service
// addOpenAPIv3Source method.
type AddOpenAPIv3SourceResult struct {
	// A deployment that was successfully created.
	Deployment *Deployment
}

// CreateDeploymentPayload is the payload type of the deployments service
// createDeployment method.
type CreateDeploymentPayload struct {
	SessionToken     *string
	ProjectSlugInput *string
	// A unique identifier that will mitigate against duplicate deployments.
	IdempotencyKey string
	// The github repository in the form of "owner/repo".
	GithubRepo *string
	// The github pull request that resulted in the deployment.
	GithubPr *string
	// The commit hash that triggered the deployment.
	GithubSha *string
	// The external ID to refer to the deployment. This can be a git commit hash
	// for example.
	ExternalID *string
	// The upstream URL a deployment can refer to. This can be a github url to a
	// commit hash or pull request.
	ExternalURL     *string
	Openapiv3Assets []*OpenAPIv3DeploymentAssetForm
}

// CreateDeploymentResult is the result type of the deployments service
// createDeployment method.
type CreateDeploymentResult struct {
	// A deployment that was successfully created.
	Deployment *Deployment
}

type Deployment struct {
	// The ID to of the deployment.
	ID string
	// The ID of the organization that the deployment belongs to.
	OrganizationID string
	// The ID of the project that the deployment belongs to.
	ProjectID string
	// The ID of the user that created the deployment.
	UserID string
	// The creation date of the deployment.
	CreatedAt string
	// The status of the deployment.
	Status string
	// A unique identifier that will mitigate against duplicate deployments.
	IdempotencyKey *string
	// The github repository in the form of "owner/repo".
	GithubRepo *string
	// The github pull request that resulted in the deployment.
	GithubPr *string
	// The commit hash that triggered the deployment.
	GithubSha *string
	// The external ID to refer to the deployment. This can be a git commit hash
	// for example.
	ExternalID *string
	// The upstream URL a deployment can refer to. This can be a github url to a
	// commit hash or pull request.
	ExternalURL *string
	// The IDs, as returned from the assets upload service, to uploaded OpenAPI 3.x
	// documents whose operations will become tool definitions.
	Openapiv3Assets []*OpenAPIv3DeploymentAsset
}

type DeploymentSummary struct {
	// The ID to of the deployment.
	ID string
	// The ID of the user that created the deployment.
	UserID string
	// The creation date of the deployment.
	CreatedAt string
	// The number of upstream assets.
	AssetCount int64
}

// GetDeploymentPayload is the payload type of the deployments service
// getDeployment method.
type GetDeploymentPayload struct {
	SessionToken     *string
	ProjectSlugInput *string
	// The ID of the deployment
	ID string
}

// GetDeploymentResult is the result type of the deployments service
// getDeployment method.
type GetDeploymentResult struct {
	// The ID to of the deployment.
	ID string
	// The ID of the organization that the deployment belongs to.
	OrganizationID string
	// The ID of the project that the deployment belongs to.
	ProjectID string
	// The ID of the user that created the deployment.
	UserID string
	// The creation date of the deployment.
	CreatedAt string
	// The status of the deployment.
	Status string
	// A unique identifier that will mitigate against duplicate deployments.
	IdempotencyKey *string
	// The github repository in the form of "owner/repo".
	GithubRepo *string
	// The github pull request that resulted in the deployment.
	GithubPr *string
	// The commit hash that triggered the deployment.
	GithubSha *string
	// The external ID to refer to the deployment. This can be a git commit hash
	// for example.
	ExternalID *string
	// The upstream URL a deployment can refer to. This can be a github url to a
	// commit hash or pull request.
	ExternalURL *string
	// The IDs, as returned from the assets upload service, to uploaded OpenAPI 3.x
	// documents whose operations will become tool definitions.
	Openapiv3Assets []*OpenAPIv3DeploymentAsset
}

// ListDeploymentResult is the result type of the deployments service
// listDeployments method.
type ListDeploymentResult struct {
	// The cursor to fetch results from
	NextCursor *string
	// A list of deployments
	Items []*DeploymentSummary
}

// ListDeploymentsPayload is the payload type of the deployments service
// listDeployments method.
type ListDeploymentsPayload struct {
	SessionToken     *string
	ProjectSlugInput *string
	// The cursor to fetch results from
	Cursor *string
}

type OpenAPIv3DeploymentAsset struct {
	// The ID of the deployment asset.
	ID string
	// The ID of the uploaded asset.
	AssetID string
	// The name to give the document as it will be displayed in UIs.
	Name string
	// The slug to give the document as it will be displayed in URLs.
	Slug Slug
}

type OpenAPIv3DeploymentAssetForm struct {
	// The ID of the uploaded asset.
	AssetID string
	// The name to give the document as it will be displayed in UIs.
	Name string
	// The slug to give the document as it will be displayed in URLs.
	Slug Slug
}

type Slug string
