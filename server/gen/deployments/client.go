// Code generated by goa v3.20.1, DO NOT EDIT.
//
// deployments client
//
// Command:
// $ goa gen github.com/speakeasy-api/gram/design

package deployments

import (
	"context"

	goa "goa.design/goa/v3/pkg"
)

// Client is the "deployments" service client.
type Client struct {
	GetDeploymentEndpoint       goa.Endpoint
	GetLatestDeploymentEndpoint goa.Endpoint
	CreateDeploymentEndpoint    goa.Endpoint
	EvolveEndpoint              goa.Endpoint
	ListDeploymentsEndpoint     goa.Endpoint
}

// NewClient initializes a "deployments" service client given the endpoints.
func NewClient(getDeployment, getLatestDeployment, createDeployment, evolve, listDeployments goa.Endpoint) *Client {
	return &Client{
		GetDeploymentEndpoint:       getDeployment,
		GetLatestDeploymentEndpoint: getLatestDeployment,
		CreateDeploymentEndpoint:    createDeployment,
		EvolveEndpoint:              evolve,
		ListDeploymentsEndpoint:     listDeployments,
	}
}

// GetDeployment calls the "getDeployment" endpoint of the "deployments"
// service.
func (c *Client) GetDeployment(ctx context.Context, p *GetDeploymentPayload) (res *GetDeploymentResult, err error) {
	var ires any
	ires, err = c.GetDeploymentEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(*GetDeploymentResult), nil
}

// GetLatestDeployment calls the "getLatestDeployment" endpoint of the
// "deployments" service.
func (c *Client) GetLatestDeployment(ctx context.Context, p *GetLatestDeploymentPayload) (res *GetLatestDeploymentResult, err error) {
	var ires any
	ires, err = c.GetLatestDeploymentEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(*GetLatestDeploymentResult), nil
}

// CreateDeployment calls the "createDeployment" endpoint of the "deployments"
// service.
func (c *Client) CreateDeployment(ctx context.Context, p *CreateDeploymentPayload) (res *CreateDeploymentResult, err error) {
	var ires any
	ires, err = c.CreateDeploymentEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(*CreateDeploymentResult), nil
}

// Evolve calls the "evolve" endpoint of the "deployments" service.
func (c *Client) Evolve(ctx context.Context, p *EvolvePayload) (res *EvolveResult, err error) {
	var ires any
	ires, err = c.EvolveEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(*EvolveResult), nil
}

// ListDeployments calls the "listDeployments" endpoint of the "deployments"
// service.
func (c *Client) ListDeployments(ctx context.Context, p *ListDeploymentsPayload) (res *ListDeploymentResult, err error) {
	var ires any
	ires, err = c.ListDeploymentsEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(*ListDeploymentResult), nil
}
