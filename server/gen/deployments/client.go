// Code generated by goa v3.20.0, DO NOT EDIT.
//
// deployments client
//
// Command:
// $ goa gen github.com/speakeasy-api/gram/design

package deployments

import (
	"context"

	goa "goa.design/goa/v3/pkg"
)

// Client is the "deployments" service client.
type Client struct {
	GetDeploymentEndpoint    goa.Endpoint
	CreateDeploymentEndpoint goa.Endpoint
	ListDeploymentsEndpoint  goa.Endpoint
}

// NewClient initializes a "deployments" service client given the endpoints.
func NewClient(getDeployment, createDeployment, listDeployments goa.Endpoint) *Client {
	return &Client{
		GetDeploymentEndpoint:    getDeployment,
		CreateDeploymentEndpoint: createDeployment,
		ListDeploymentsEndpoint:  listDeployments,
	}
}

// GetDeployment calls the "getDeployment" endpoint of the "deployments"
// service.
func (c *Client) GetDeployment(ctx context.Context, p *GetDeploymentPayload) (res *DeploymentGetResult, err error) {
	var ires any
	ires, err = c.GetDeploymentEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(*DeploymentGetResult), nil
}

// CreateDeployment calls the "createDeployment" endpoint of the "deployments"
// service.
func (c *Client) CreateDeployment(ctx context.Context, p *CreateDeploymentPayload) (res *DeploymentCreateResult, err error) {
	var ires any
	ires, err = c.CreateDeploymentEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(*DeploymentCreateResult), nil
}

// ListDeployments calls the "listDeployments" endpoint of the "deployments"
// service.
func (c *Client) ListDeployments(ctx context.Context, p *ListDeploymentsPayload) (res *DeploymentListResult, err error) {
	var ires any
	ires, err = c.ListDeploymentsEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(*DeploymentListResult), nil
}
