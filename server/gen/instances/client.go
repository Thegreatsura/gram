// Code generated by goa v3.20.1, DO NOT EDIT.
//
// instances client
//
// Command:
// $ goa gen github.com/speakeasy-api/gram/design

package instances

import (
	"context"

	goa "goa.design/goa/v3/pkg"
)

// Client is the "instances" service client.
type Client struct {
	LoadInstanceEndpoint goa.Endpoint
}

// NewClient initializes a "instances" service client given the endpoints.
func NewClient(loadInstance goa.Endpoint) *Client {
	return &Client{
		LoadInstanceEndpoint: loadInstance,
	}
}

// LoadInstance calls the "loadInstance" endpoint of the "instances" service.
func (c *Client) LoadInstance(ctx context.Context, p *LoadInstancePayload) (res *InstanceResult, err error) {
	var ires any
	ires, err = c.LoadInstanceEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(*InstanceResult), nil
}
