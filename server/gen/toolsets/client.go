// Code generated by goa v3.20.1, DO NOT EDIT.
//
// toolsets client
//
// Command:
// $ goa gen github.com/speakeasy-api/gram/design

package toolsets

import (
	"context"

	goa "goa.design/goa/v3/pkg"
)

// Client is the "toolsets" service client.
type Client struct {
	CreateToolsetEndpoint goa.Endpoint
	ListToolsetsEndpoint  goa.Endpoint
	UpdateToolsetEndpoint goa.Endpoint
	DeleteToolsetEndpoint goa.Endpoint
	GetToolsetEndpoint    goa.Endpoint
}

// NewClient initializes a "toolsets" service client given the endpoints.
func NewClient(createToolset, listToolsets, updateToolset, deleteToolset, getToolset goa.Endpoint) *Client {
	return &Client{
		CreateToolsetEndpoint: createToolset,
		ListToolsetsEndpoint:  listToolsets,
		UpdateToolsetEndpoint: updateToolset,
		DeleteToolsetEndpoint: deleteToolset,
		GetToolsetEndpoint:    getToolset,
	}
}

// CreateToolset calls the "createToolset" endpoint of the "toolsets" service.
func (c *Client) CreateToolset(ctx context.Context, p *CreateToolsetPayload) (res *ToolsetDetails, err error) {
	var ires any
	ires, err = c.CreateToolsetEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(*ToolsetDetails), nil
}

// ListToolsets calls the "listToolsets" endpoint of the "toolsets" service.
func (c *Client) ListToolsets(ctx context.Context, p *ListToolsetsPayload) (res *ListToolsetsResult, err error) {
	var ires any
	ires, err = c.ListToolsetsEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(*ListToolsetsResult), nil
}

// UpdateToolset calls the "updateToolset" endpoint of the "toolsets" service.
func (c *Client) UpdateToolset(ctx context.Context, p *UpdateToolsetPayload) (res *ToolsetDetails, err error) {
	var ires any
	ires, err = c.UpdateToolsetEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(*ToolsetDetails), nil
}

// DeleteToolset calls the "deleteToolset" endpoint of the "toolsets" service.
func (c *Client) DeleteToolset(ctx context.Context, p *DeleteToolsetPayload) (err error) {
	_, err = c.DeleteToolsetEndpoint(ctx, p)
	return
}

// GetToolset calls the "getToolset" endpoint of the "toolsets" service.
func (c *Client) GetToolset(ctx context.Context, p *GetToolsetPayload) (res *ToolsetDetails, err error) {
	var ires any
	ires, err = c.GetToolsetEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(*ToolsetDetails), nil
}
