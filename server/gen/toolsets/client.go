// Code generated by goa v3.20.0, DO NOT EDIT.
//
// toolsets client
//
// Command:
// $ goa gen github.com/speakeasy-api/gram/design

package toolsets

import (
	"context"

	goa "goa.design/goa/v3/pkg"
)

// Client is the "toolsets" service client.
type Client struct {
	CreateToolsetEndpoint     goa.Endpoint
	ListToolsetsEndpoint      goa.Endpoint
	UpdateToolsetEndpoint     goa.Endpoint
	DeleteToolsetEndpoint     goa.Endpoint
	GetToolsetDetailsEndpoint goa.Endpoint
}

// NewClient initializes a "toolsets" service client given the endpoints.
func NewClient(createToolset, listToolsets, updateToolset, deleteToolset, getToolsetDetails goa.Endpoint) *Client {
	return &Client{
		CreateToolsetEndpoint:     createToolset,
		ListToolsetsEndpoint:      listToolsets,
		UpdateToolsetEndpoint:     updateToolset,
		DeleteToolsetEndpoint:     deleteToolset,
		GetToolsetDetailsEndpoint: getToolsetDetails,
	}
}

// CreateToolset calls the "createToolset" endpoint of the "toolsets" service.
func (c *Client) CreateToolset(ctx context.Context, p *CreateToolsetPayload) (res *Toolset, err error) {
	var ires any
	ires, err = c.CreateToolsetEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(*Toolset), nil
}

// ListToolsets calls the "listToolsets" endpoint of the "toolsets" service.
func (c *Client) ListToolsets(ctx context.Context, p *ListToolsetsPayload) (res *ListToolsetsResult, err error) {
	var ires any
	ires, err = c.ListToolsetsEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(*ListToolsetsResult), nil
}

// UpdateToolset calls the "updateToolset" endpoint of the "toolsets" service.
func (c *Client) UpdateToolset(ctx context.Context, p *UpdateToolsetPayload) (res *Toolset, err error) {
	var ires any
	ires, err = c.UpdateToolsetEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(*Toolset), nil
}

// DeleteToolset calls the "deleteToolset" endpoint of the "toolsets" service.
func (c *Client) DeleteToolset(ctx context.Context, p *DeleteToolsetPayload) (err error) {
	_, err = c.DeleteToolsetEndpoint(ctx, p)
	return
}

// GetToolsetDetails calls the "getToolsetDetails" endpoint of the "toolsets"
// service.
func (c *Client) GetToolsetDetails(ctx context.Context, p *GetToolsetDetailsPayload) (res *ToolsetDetails, err error) {
	var ires any
	ires, err = c.GetToolsetDetailsEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(*ToolsetDetails), nil
}
