// Code generated by goa v3.20.0, DO NOT EDIT.
//
// system endpoints
//
// Command:
// $ goa gen github.com/speakeasy-api/gram/design

package system

import (
	"context"

	goa "goa.design/goa/v3/pkg"
)

// Endpoints wraps the "system" service endpoints.
type Endpoints struct {
	HealthCheck goa.Endpoint
}

// NewEndpoints wraps the methods of the "system" service with endpoints.
func NewEndpoints(s Service) *Endpoints {
	return &Endpoints{
		HealthCheck: NewHealthCheckEndpoint(s),
	}
}

// Use applies the given middleware to all the "system" service endpoints.
func (e *Endpoints) Use(m func(goa.Endpoint) goa.Endpoint) {
	e.HealthCheck = m(e.HealthCheck)
}

// NewHealthCheckEndpoint returns an endpoint function that calls the method
// "healthCheck" of service "system".
func NewHealthCheckEndpoint(s Service) goa.Endpoint {
	return func(ctx context.Context, req any) (any, error) {
		return s.HealthCheck(ctx)
	}
}
