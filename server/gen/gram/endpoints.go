// Code generated by goa v3.20.0, DO NOT EDIT.
//
// gram endpoints
//
// Command:
// $ goa gen github.com/speakeasy-api/gram/design

package gram

import (
	"context"

	goa "goa.design/goa/v3/pkg"
)

// Endpoints wraps the "gram" service endpoints.
type Endpoints struct {
	CreateDeployment goa.Endpoint
}

// NewEndpoints wraps the methods of the "gram" service with endpoints.
func NewEndpoints(s Service) *Endpoints {
	return &Endpoints{
		CreateDeployment: NewCreateDeploymentEndpoint(s),
	}
}

// Use applies the given middleware to all the "gram" service endpoints.
func (e *Endpoints) Use(m func(goa.Endpoint) goa.Endpoint) {
	e.CreateDeployment = m(e.CreateDeployment)
}

// NewCreateDeploymentEndpoint returns an endpoint function that calls the
// method "createDeployment" of service "gram".
func NewCreateDeploymentEndpoint(s Service) goa.Endpoint {
	return func(ctx context.Context, req any) (any, error) {
		p := req.(*DeploymentCreateForm)
		return s.CreateDeployment(ctx, p)
	}
}
