// Code generated by goa v3.20.0, DO NOT EDIT.
//
// environments client
//
// Command:
// $ goa gen github.com/speakeasy-api/gram/design

package environments

import (
	"context"

	goa "goa.design/goa/v3/pkg"
)

// Client is the "environments" service client.
type Client struct {
	CreateEnvironmentEndpoint goa.Endpoint
	ListEnvironmentsEndpoint  goa.Endpoint
	UpdateEnvironmentEndpoint goa.Endpoint
	DeleteEnvironmentEndpoint goa.Endpoint
}

// NewClient initializes a "environments" service client given the endpoints.
func NewClient(createEnvironment, listEnvironments, updateEnvironment, deleteEnvironment goa.Endpoint) *Client {
	return &Client{
		CreateEnvironmentEndpoint: createEnvironment,
		ListEnvironmentsEndpoint:  listEnvironments,
		UpdateEnvironmentEndpoint: updateEnvironment,
		DeleteEnvironmentEndpoint: deleteEnvironment,
	}
}

// CreateEnvironment calls the "createEnvironment" endpoint of the
// "environments" service.
func (c *Client) CreateEnvironment(ctx context.Context, p *CreateEnvironmentPayload) (res *Environment, err error) {
	var ires any
	ires, err = c.CreateEnvironmentEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(*Environment), nil
}

// ListEnvironments calls the "listEnvironments" endpoint of the "environments"
// service.
func (c *Client) ListEnvironments(ctx context.Context, p *ListEnvironmentsPayload) (res *ListEnvironmentsResult, err error) {
	var ires any
	ires, err = c.ListEnvironmentsEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(*ListEnvironmentsResult), nil
}

// UpdateEnvironment calls the "updateEnvironment" endpoint of the
// "environments" service.
func (c *Client) UpdateEnvironment(ctx context.Context, p *UpdateEnvironmentPayload) (res *Environment, err error) {
	var ires any
	ires, err = c.UpdateEnvironmentEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(*Environment), nil
}

// DeleteEnvironment calls the "deleteEnvironment" endpoint of the
// "environments" service.
func (c *Client) DeleteEnvironment(ctx context.Context, p *DeleteEnvironmentPayload) (err error) {
	_, err = c.DeleteEnvironmentEndpoint(ctx, p)
	return
}
