openapi: 3.0.3
info:
    title: Gram API Description
    description: Gram is the tools platform for AI agents
    version: 0.0.1
servers:
    - url: http://localhost:80
      description: Default server for gram
paths:
    /rpc/assets.uploadOpenAPIv3:
        post:
            description: Upload an OpenAPI v3 document to Gram.
            operationId: assets#uploadOpenAPIv3
            parameters:
                - allowEmptyValue: true
                  in: header
                  name: Content-Type
                  required: true
                  schema:
                    type: string
                - allowEmptyValue: true
                  in: header
                  name: Content-Length
                  required: true
                  schema:
                    format: int64
                    type: integer
                - allowEmptyValue: true
                  description: project header
                  in: header
                  name: Gram-Project
                  schema:
                    description: project header
                    type: string
                - allowEmptyValue: true
                  description: Session header
                  in: header
                  name: Gram-Session
                  schema:
                    description: Session header
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UploadOpenAPIv3Result'
                    description: OK response.
            security:
                - project_slug_header_Gram-Project: []
                  session_header_Gram-Session: []
            summary: uploadOpenAPIv3 assets
            tags:
                - assets
            x-speakeasy-react-hook:
                name: UploadOpenAPIv3
    /rpc/auth.callback:
        get:
            description: Handles the authentication callback.
            operationId: auth#callback
            parameters:
                - allowEmptyValue: true
                  description: The shared token for authentication from the speakeasy system
                  in: query
                  name: shared_token
                  required: true
                  schema:
                    description: The shared token for authentication from the speakeasy system
                    type: string
            responses:
                "307":
                    description: Temporary Redirect response.
                    headers:
                        Gram-Session:
                            description: Session header
                            schema:
                                description: Session header
                                type: string
                        Location:
                            description: The URL to redirect to after authentication
                            schema:
                                description: The URL to redirect to after authentication
                                type: string
                        Set-Cookie:
                            description: The authentication session
                            schema:
                                description: The authentication session
                                type: string
            summary: callback auth
            tags:
                - auth
            x-speakeasy-react-hook:
                disabled: true
    /rpc/auth.info:
        get:
            description: Provides information about the current authentication status.
            operationId: auth#info
            parameters:
                - allowEmptyValue: true
                  description: Session header
                  in: header
                  name: Gram-Session
                  schema:
                    description: Session header
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/InfoResponseBody'
                    description: OK response.
                    headers:
                        Gram-Session:
                            description: Session header
                            schema:
                                description: Session header
                                type: string
                        Set-Cookie:
                            description: The authentication session
                            schema:
                                description: The authentication session
                                type: string
            security:
                - session_header_Gram-Session: []
            summary: info auth
            tags:
                - auth
            x-speakeasy-react-hook:
                name: SessionInfo
    /rpc/auth.logout:
        get:
            description: Logs out the current user by clearing their session.
            operationId: auth#logout
            parameters:
                - allowEmptyValue: true
                  description: Session header
                  in: header
                  name: Gram-Session
                  schema:
                    description: Session header
                    type: string
            responses:
                "200":
                    description: OK response.
                    headers:
                        Set-Cookie:
                            description: Empty string to clear the session
                            schema:
                                description: Empty string to clear the session
                                type: string
            security:
                - session_header_Gram-Session: []
            summary: logout auth
            tags:
                - auth
            x-speakeasy-react-hook:
                name: Logout
    /rpc/auth.switchScopes:
        post:
            description: Switches the authentication scope to a different organization.
            operationId: auth#switchScopes
            parameters:
                - allowEmptyValue: true
                  description: The organization slug to switch scopes
                  in: query
                  name: organization_id
                  schema:
                    description: The organization slug to switch scopes
                    type: string
                - allowEmptyValue: true
                  description: The project id to switch scopes too
                  in: query
                  name: project_id
                  schema:
                    description: The project id to switch scopes too
                    type: string
                - allowEmptyValue: true
                  description: Session header
                  in: header
                  name: Gram-Session
                  schema:
                    description: Session header
                    type: string
            responses:
                "200":
                    description: OK response.
                    headers:
                        Gram-Session:
                            description: Session header
                            schema:
                                description: Session header
                                type: string
                        Set-Cookie:
                            description: The authentication session
                            schema:
                                description: The authentication session
                                type: string
            security:
                - session_header_Gram-Session: []
            summary: switchScopes auth
            tags:
                - auth
            x-speakeasy-react-hook:
                name: SwitchScopes
    /rpc/deployments.create:
        post:
            description: Create a deployment to load tool definitions.
            operationId: deployments#createDeployment
            parameters:
                - allowEmptyValue: true
                  description: Session header
                  in: header
                  name: Gram-Session
                  schema:
                    description: Session header
                    type: string
                - allowEmptyValue: true
                  description: project header
                  in: header
                  name: Gram-Project
                  schema:
                    description: project header
                    type: string
                - allowEmptyValue: true
                  description: A unique identifier that will mitigate against duplicate deployments.
                  example: 01jqq0ajmb4qh9eppz48dejr2m
                  in: header
                  name: Idempotency-Key
                  required: true
                  schema:
                    description: A unique identifier that will mitigate against duplicate deployments.
                    example: 01jqq0ajmb4qh9eppz48dejr2m
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/CreateDeploymentRequestBody'
                required: true
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CreateDeploymentResult'
                    description: OK response.
            security:
                - project_slug_header_Gram-Project: []
                  session_header_Gram-Session: []
            summary: createDeployment deployments
            tags:
                - deployments
            x-speakeasy-react-hook:
                name: CreateDeployment
    /rpc/deployments.get:
        get:
            description: Create a deployment to load tool definitions.
            operationId: deployments#getDeployment
            parameters:
                - allowEmptyValue: true
                  description: The ID of the deployment
                  in: query
                  name: id
                  required: true
                  schema:
                    description: The ID of the deployment
                    type: string
                - allowEmptyValue: true
                  description: Session header
                  in: header
                  name: Gram-Session
                  schema:
                    description: Session header
                    type: string
                - allowEmptyValue: true
                  description: project header
                  in: header
                  name: Gram-Project
                  schema:
                    description: project header
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetDeploymentResult'
                    description: OK response.
            security:
                - project_slug_header_Gram-Project: []
                  session_header_Gram-Session: []
            summary: getDeployment deployments
            tags:
                - deployments
            x-speakeasy-react-hook:
                name: Deployment
    /rpc/deployments.list:
        get:
            description: List all deployments in descending order of creation.
            operationId: deployments#listDeployments
            parameters:
                - allowEmptyValue: true
                  description: The cursor to fetch results from
                  in: query
                  name: cursor
                  schema:
                    description: The cursor to fetch results from
                    type: string
                - allowEmptyValue: true
                  description: Session header
                  in: header
                  name: Gram-Session
                  schema:
                    description: Session header
                    type: string
                - allowEmptyValue: true
                  description: project header
                  in: header
                  name: Gram-Project
                  schema:
                    description: project header
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListDeploymentResult'
                    description: OK response.
            security:
                - project_slug_header_Gram-Project: []
                  session_header_Gram-Session: []
            summary: listDeployments deployments
            tags:
                - deployments
            x-speakeasy-react-hook:
                name: ListDeployments
    /rpc/environments.create:
        post:
            description: Create a new environment
            operationId: environments#createEnvironment
            parameters:
                - allowEmptyValue: true
                  description: Session header
                  in: header
                  name: Gram-Session
                  schema:
                    description: Session header
                    type: string
                - allowEmptyValue: true
                  description: project header
                  in: header
                  name: Gram-Project
                  schema:
                    description: project header
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/CreateEnvironmentForm'
                required: true
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Environment'
                    description: OK response.
            security:
                - project_slug_header_Gram-Project: []
                  session_header_Gram-Session: []
            summary: createEnvironment environments
            tags:
                - environments
            x-speakeasy-react-hook:
                name: CreateEnvironment
    /rpc/environments.delete/{slug}:
        delete:
            description: Delete an environment
            operationId: environments#deleteEnvironment
            parameters:
                - description: The slug of the environment to delete
                  in: path
                  name: slug
                  required: true
                  schema:
                    description: The slug of the environment to delete
                    type: string
                - allowEmptyValue: true
                  description: Session header
                  in: header
                  name: Gram-Session
                  schema:
                    description: Session header
                    type: string
                - allowEmptyValue: true
                  description: project header
                  in: header
                  name: Gram-Project
                  schema:
                    description: project header
                    type: string
            responses:
                "200":
                    description: OK response.
            security:
                - project_slug_header_Gram-Project: []
                  session_header_Gram-Session: []
            summary: deleteEnvironment environments
            tags:
                - environments
            x-speakeasy-react-hook:
                name: DeleteEnvironment
    /rpc/environments.list:
        get:
            description: List all environments for an organization
            operationId: environments#listEnvironments
            parameters:
                - allowEmptyValue: true
                  description: Session header
                  in: header
                  name: Gram-Session
                  schema:
                    description: Session header
                    type: string
                - allowEmptyValue: true
                  description: project header
                  in: header
                  name: Gram-Project
                  schema:
                    description: project header
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListEnvironmentsResult'
                    description: OK response.
            security:
                - project_slug_header_Gram-Project: []
                  session_header_Gram-Session: []
            summary: listEnvironments environments
            tags:
                - environments
            x-speakeasy-react-hook:
                name: ListEnvironments
    /rpc/environments.update/{slug}:
        post:
            description: Update an environment
            operationId: environments#updateEnvironment
            parameters:
                - description: The slug of the environment to update
                  in: path
                  name: slug
                  required: true
                  schema:
                    description: The slug of the environment to update
                    type: string
                - allowEmptyValue: true
                  description: Session header
                  in: header
                  name: Gram-Session
                  schema:
                    description: Session header
                    type: string
                - allowEmptyValue: true
                  description: project header
                  in: header
                  name: Gram-Project
                  schema:
                    description: project header
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/UpdateEnvironmentRequestBody'
                required: true
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Environment'
                    description: OK response.
            security:
                - project_slug_header_Gram-Project: []
                  session_header_Gram-Session: []
            summary: updateEnvironment environments
            tags:
                - environments
            x-speakeasy-react-hook:
                name: UpdateEnvironment
    /rpc/instances.load:
        get:
            description: load all relevant data for an instance of a toolset and environment
            operationId: instances#loadInstance
            parameters:
                - allowEmptyValue: true
                  description: The slug of the toolset to load
                  in: query
                  name: toolset_slug
                  required: true
                  schema:
                    description: The slug of the toolset to load
                    type: string
                - allowEmptyValue: true
                  description: The slug of the environment to load
                  in: query
                  name: environment_slug
                  schema:
                    description: The slug of the environment to load
                    type: string
                - allowEmptyValue: true
                  description: Session header
                  in: header
                  name: Gram-Session
                  schema:
                    description: Session header
                    type: string
                - allowEmptyValue: true
                  description: project header
                  in: header
                  name: Gram-Project
                  schema:
                    description: project header
                    type: string
                - allowEmptyValue: true
                  description: API Key header
                  in: header
                  name: Gram-Key
                  schema:
                    description: API Key header
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/InstanceResult'
                    description: OK response.
            security:
                - project_slug_header_Gram-Project: []
                  session_header_Gram-Session: []
                - apikey_header_Gram-Key: []
                  project_slug_header_Gram-Project: []
            summary: loadInstance instances
            tags:
                - instances
            x-speakeasy-react-hook:
                name: LoadInstance
    /rpc/keys.create:
        post:
            description: Create a new api key
            operationId: keys#createKey
            parameters:
                - allowEmptyValue: true
                  description: Session header
                  in: header
                  name: Gram-Session
                  schema:
                    description: Session header
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/CreateKeyForm'
                required: true
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Key'
                    description: OK response.
            security:
                - session_header_Gram-Session: []
            summary: createKey keys
            tags:
                - keys
            x-speakeasy-react-hook:
                name: CreateAPIKey
    /rpc/keys.list:
        get:
            description: List all api keys for an organization
            operationId: keys#listKeys
            parameters:
                - allowEmptyValue: true
                  description: Session header
                  in: header
                  name: Gram-Session
                  schema:
                    description: Session header
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListKeysResult'
                    description: OK response.
            security:
                - session_header_Gram-Session: []
            summary: listKeys keys
            tags:
                - keys
            x-speakeasy-react-hook:
                name: ListAPIKeys
    /rpc/keys.revoke/{id}:
        delete:
            description: Revoke a api key
            operationId: keys#revokeKey
            parameters:
                - description: The ID of the key to revoke
                  in: path
                  name: id
                  required: true
                  schema:
                    description: The ID of the key to revoke
                    type: string
                - allowEmptyValue: true
                  description: Session header
                  in: header
                  name: Gram-Session
                  schema:
                    description: Session header
                    type: string
            responses:
                "200":
                    description: OK response.
            security:
                - session_header_Gram-Session: []
            summary: revokeKey keys
            tags:
                - keys
            x-speakeasy-react-hook:
                name: RevokeAPIKey
    /rpc/tools.list:
        get:
            description: List all tools for a project
            operationId: tools#listTools
            parameters:
                - allowEmptyValue: true
                  description: The cursor to fetch results from
                  in: query
                  name: cursor
                  schema:
                    description: The cursor to fetch results from
                    type: string
                - allowEmptyValue: true
                  description: Session header
                  in: header
                  name: Gram-Session
                  schema:
                    description: Session header
                    type: string
                - allowEmptyValue: true
                  description: project header
                  in: header
                  name: Gram-Project
                  schema:
                    description: project header
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListToolsResult'
                    description: OK response.
            security:
                - project_slug_header_Gram-Project: []
                  session_header_Gram-Session: []
            summary: listTools tools
            tags:
                - tools
            x-speakeasy-react-hook:
                name: ListTools
    /rpc/toolsets.create:
        post:
            description: Create a new toolset with associated tools
            operationId: toolsets#createToolset
            parameters:
                - allowEmptyValue: true
                  description: Session header
                  in: header
                  name: Gram-Session
                  schema:
                    description: Session header
                    type: string
                - allowEmptyValue: true
                  description: project header
                  in: header
                  name: Gram-Project
                  schema:
                    description: project header
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/CreateToolsetRequestBody'
                required: true
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Toolset'
                    description: OK response.
            security:
                - project_slug_header_Gram-Project: []
                  session_header_Gram-Session: []
            summary: createToolset toolsets
            tags:
                - toolsets
            x-speakeasy-react-hook:
                name: CreateToolset
    /rpc/toolsets.delete/{slug}:
        delete:
            description: Delete a toolset by its ID
            operationId: toolsets#deleteToolset
            parameters:
                - description: The slug of the toolset
                  in: path
                  name: slug
                  required: true
                  schema:
                    description: The slug of the toolset
                    type: string
                - allowEmptyValue: true
                  description: Session header
                  in: header
                  name: Gram-Session
                  schema:
                    description: Session header
                    type: string
                - allowEmptyValue: true
                  description: project header
                  in: header
                  name: Gram-Project
                  schema:
                    description: project header
                    type: string
            responses:
                "204":
                    description: No Content response.
            security:
                - project_slug_header_Gram-Project: []
                  session_header_Gram-Session: []
            summary: deleteToolset toolsets
            tags:
                - toolsets
            x-speakeasy-react-hook:
                name: DeleteToolset
    /rpc/toolsets.get/{slug}:
        get:
            description: Get detailed information about a toolset including full HTTP tool definitions
            operationId: toolsets#getToolsetDetails
            parameters:
                - description: The slug of the toolset
                  in: path
                  name: slug
                  required: true
                  schema:
                    description: The slug of the toolset
                    type: string
                - allowEmptyValue: true
                  description: Session header
                  in: header
                  name: Gram-Session
                  schema:
                    description: Session header
                    type: string
                - allowEmptyValue: true
                  description: project header
                  in: header
                  name: Gram-Project
                  schema:
                    description: project header
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ToolsetDetails'
                    description: OK response.
            security:
                - project_slug_header_Gram-Project: []
                  session_header_Gram-Session: []
            summary: getToolsetDetails toolsets
            tags:
                - toolsets
            x-speakeasy-react-hook:
                name: Toolset
    /rpc/toolsets.list:
        get:
            description: List all toolsets for a project
            operationId: toolsets#listToolsets
            parameters:
                - allowEmptyValue: true
                  description: Session header
                  in: header
                  name: Gram-Session
                  schema:
                    description: Session header
                    type: string
                - allowEmptyValue: true
                  description: project header
                  in: header
                  name: Gram-Project
                  schema:
                    description: project header
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListToolsetsResult'
                    description: OK response.
            security:
                - project_slug_header_Gram-Project: []
                  session_header_Gram-Session: []
            summary: listToolsets toolsets
            tags:
                - toolsets
            x-speakeasy-react-hook:
                name: ListToolsets
    /rpc/toolsets.update/{slug}:
        post:
            description: Update a toolset's properties including name, description, and HTTP tools
            operationId: toolsets#updateToolset
            parameters:
                - description: The slug of the toolset to update
                  in: path
                  name: slug
                  required: true
                  schema:
                    description: The slug of the toolset to update
                    type: string
                - allowEmptyValue: true
                  description: Session header
                  in: header
                  name: Gram-Session
                  schema:
                    description: Session header
                    type: string
                - allowEmptyValue: true
                  description: project header
                  in: header
                  name: Gram-Project
                  schema:
                    description: project header
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/UpdateToolsetRequestBody'
                required: true
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Toolset'
                    description: OK response.
            security:
                - project_slug_header_Gram-Project: []
                  session_header_Gram-Session: []
            summary: updateToolset toolsets
            tags:
                - toolsets
            x-speakeasy-react-hook:
                name: UpdateToolset
components:
    schemas:
        Asset:
            type: object
            properties:
                content_length:
                    type: integer
                    description: The content length of the asset
                    format: int64
                content_type:
                    type: string
                    description: The content type of the asset
                created_at:
                    type: string
                    description: The creation date of the asset.
                    format: date-time
                id:
                    type: string
                    description: The ID of the asset
                kind:
                    type: string
                    enum:
                        - openapiv3
                        - unknown
                sha256:
                    type: string
                    description: The SHA256 hash of the asset
                updated_at:
                    type: string
                    description: The last update date of the asset.
                    format: date-time
                url:
                    type: string
                    description: The URL to the uploaded asset
            required:
                - id
                - url
                - kind
                - sha256
                - content_type
                - content_length
                - created_at
                - updated_at
        CreateDeploymentForm:
            type: object
            properties:
                external_id:
                    type: string
                    description: The external ID to refer to the deployment. This can be a git commit hash for example.
                    example: bc5f4a555e933e6861d12edba4c2d87ef6caf8e6
                external_url:
                    type: string
                    description: The upstream URL a deployment can refer to. This can be a github url to a commit hash or pull request.
                github_pr:
                    type: string
                    description: The github pull request that resulted in the deployment.
                    example: "1234"
                github_repo:
                    type: string
                    description: The github repository in the form of "owner/repo".
                    example: speakeasyapi/gram
                github_sha:
                    type: string
                    description: The commit hash that triggered the deployment.
                    example: f33e693e9e12552043bc0ec5c37f1b8a9e076161
                idempotency_key:
                    type: string
                    description: A unique identifier that will mitigate against duplicate deployments.
                    example: 01jqq0ajmb4qh9eppz48dejr2m
                openapiv3_assets:
                    type: array
                    items:
                        $ref: '#/components/schemas/OpenAPIv3DeploymentAssetForm'
            required:
                - idempotency_key
        CreateDeploymentRequestBody:
            type: object
            properties:
                external_id:
                    type: string
                    description: The external ID to refer to the deployment. This can be a git commit hash for example.
                    example: bc5f4a555e933e6861d12edba4c2d87ef6caf8e6
                external_url:
                    type: string
                    description: The upstream URL a deployment can refer to. This can be a github url to a commit hash or pull request.
                github_pr:
                    type: string
                    description: The github pull request that resulted in the deployment.
                    example: "1234"
                github_repo:
                    type: string
                    description: The github repository in the form of "owner/repo".
                    example: speakeasyapi/gram
                github_sha:
                    type: string
                    description: The commit hash that triggered the deployment.
                    example: f33e693e9e12552043bc0ec5c37f1b8a9e076161
                openapiv3_assets:
                    type: array
                    items:
                        $ref: '#/components/schemas/OpenAPIv3DeploymentAssetForm'
        CreateDeploymentResult:
            type: object
            properties:
                deployment:
                    $ref: '#/components/schemas/Deployment'
        CreateEnvironmentForm:
            type: object
            properties:
                description:
                    type: string
                    description: Optional description of the environment
                entries:
                    type: array
                    items:
                        $ref: '#/components/schemas/EnvironmentEntryInput'
                    description: List of environment variable entries
                name:
                    type: string
                    description: The name of the environment
                organization_id:
                    type: string
                    description: The organization ID this environment belongs to
            description: Form for creating a new environment
            required:
                - organization_id
                - name
                - entries
        CreateKeyForm:
            type: object
            properties:
                name:
                    type: string
                    description: The name of the key
            required:
                - name
                - project_id
        CreateToolsetForm:
            type: object
            properties:
                default_environment_id:
                    type: string
                    description: The ID of the environment to use as the default for the toolset
                description:
                    type: string
                    description: Description of the toolset
                http_tool_ids:
                    type: array
                    items:
                        type: string
                    description: List of HTTP tool IDs to include
                name:
                    type: string
                    description: The name of the toolset
                project_slug:
                    type: string
            required:
                - name
        CreateToolsetRequestBody:
            type: object
            properties:
                default_environment_id:
                    type: string
                    description: The ID of the environment to use as the default for the toolset
                description:
                    type: string
                    description: Description of the toolset
                http_tool_ids:
                    type: array
                    items:
                        type: string
                    description: List of HTTP tool IDs to include
                name:
                    type: string
                    description: The name of the toolset
            required:
                - name
        Deployment:
            type: object
            properties:
                created_at:
                    type: string
                    description: The creation date of the deployment.
                    format: date-time
                external_id:
                    type: string
                    description: The external ID to refer to the deployment. This can be a git commit hash for example.
                    example: bc5f4a555e933e6861d12edba4c2d87ef6caf8e6
                external_url:
                    type: string
                    description: The upstream URL a deployment can refer to. This can be a github url to a commit hash or pull request.
                github_pr:
                    type: string
                    description: The github pull request that resulted in the deployment.
                    example: "1234"
                github_repo:
                    type: string
                    description: The github repository in the form of "owner/repo".
                    example: speakeasyapi/gram
                github_sha:
                    type: string
                    description: The commit hash that triggered the deployment.
                    example: f33e693e9e12552043bc0ec5c37f1b8a9e076161
                id:
                    type: string
                    description: The ID to of the deployment.
                    example: bc5f4a555e933e6861d12edba4c2d87ef6caf8e6
                idempotency_key:
                    type: string
                    description: A unique identifier that will mitigate against duplicate deployments.
                    example: 01jqq0ajmb4qh9eppz48dejr2m
                openapiv3_assets:
                    type: array
                    items:
                        $ref: '#/components/schemas/OpenAPIv3DeploymentAsset'
                    description: The IDs, as returned from the assets upload service, to uploaded OpenAPI 3.x documents whose operations will become tool definitions.
                organization_id:
                    type: string
                    description: The ID of the organization that the deployment belongs to.
                project_id:
                    type: string
                    description: The ID of the project that the deployment belongs to.
                status:
                    type: string
                    description: The status of the deployment.
                user_id:
                    type: string
                    description: The ID of the user that created the deployment.
            required:
                - id
                - created_at
                - organization_id
                - project_id
                - user_id
                - openapiv3_assets
                - status
        DeploymentSummary:
            type: object
            properties:
                asset_count:
                    type: integer
                    description: The number of upstream assets.
                    format: int64
                created_at:
                    type: string
                    description: The creation date of the deployment.
                    format: date-time
                id:
                    type: string
                    description: The ID to of the deployment.
                    example: bc5f4a555e933e6861d12edba4c2d87ef6caf8e6
                user_id:
                    type: string
                    description: The ID of the user that created the deployment.
            required:
                - id
                - created_at
                - user_id
                - asset_count
        Environment:
            type: object
            properties:
                created_at:
                    type: string
                    description: The creation date of the environment
                    format: date-time
                description:
                    type: string
                    description: The description of the environment
                entries:
                    type: array
                    items:
                        $ref: '#/components/schemas/EnvironmentEntry'
                    description: List of environment entries
                id:
                    type: string
                    description: The ID of the environment
                name:
                    type: string
                    description: The name of the environment
                organization_id:
                    type: string
                    description: The organization ID this environment belongs to
                project_id:
                    type: string
                    description: The project ID this environment belongs to
                slug:
                    type: string
                    description: The slug identifier for the environment
                updated_at:
                    type: string
                    description: When the environment was last updated
                    format: date-time
            description: Model representing an environment
            required:
                - id
                - organization_id
                - project_id
                - name
                - slug
                - entries
                - created_at
                - updated_at
        EnvironmentEntry:
            type: object
            properties:
                created_at:
                    type: string
                    description: The creation date of the environment entry
                    format: date-time
                name:
                    type: string
                    description: The name of the environment variable
                updated_at:
                    type: string
                    description: When the environment entry was last updated
                    format: date-time
                value:
                    type: string
                    description: The value of the environment variable
            description: A single environment entry
            required:
                - name
                - value
                - created_at
                - updated_at
        EnvironmentEntryInput:
            type: object
            properties:
                name:
                    type: string
                    description: The name of the environment variable
                value:
                    type: string
                    description: The value of the environment variable
            description: A single environment entry
            required:
                - name
                - value
        GetDeploymentForm:
            type: object
            properties:
                id:
                    type: string
                    description: The ID of the deployment
            required:
                - id
        GetDeploymentResult:
            type: object
            properties:
                created_at:
                    type: string
                    description: The creation date of the deployment.
                    format: date-time
                external_id:
                    type: string
                    description: The external ID to refer to the deployment. This can be a git commit hash for example.
                    example: bc5f4a555e933e6861d12edba4c2d87ef6caf8e6
                external_url:
                    type: string
                    description: The upstream URL a deployment can refer to. This can be a github url to a commit hash or pull request.
                github_pr:
                    type: string
                    description: The github pull request that resulted in the deployment.
                    example: "1234"
                github_repo:
                    type: string
                    description: The github repository in the form of "owner/repo".
                    example: speakeasyapi/gram
                github_sha:
                    type: string
                    description: The commit hash that triggered the deployment.
                    example: f33e693e9e12552043bc0ec5c37f1b8a9e076161
                id:
                    type: string
                    description: The ID to of the deployment.
                    example: bc5f4a555e933e6861d12edba4c2d87ef6caf8e6
                idempotency_key:
                    type: string
                    description: A unique identifier that will mitigate against duplicate deployments.
                    example: 01jqq0ajmb4qh9eppz48dejr2m
                openapiv3_assets:
                    type: array
                    items:
                        $ref: '#/components/schemas/OpenAPIv3DeploymentAsset'
                    description: The IDs, as returned from the assets upload service, to uploaded OpenAPI 3.x documents whose operations will become tool definitions.
                organization_id:
                    type: string
                    description: The ID of the organization that the deployment belongs to.
                project_id:
                    type: string
                    description: The ID of the project that the deployment belongs to.
                status:
                    type: string
                    description: The status of the deployment.
                user_id:
                    type: string
                    description: The ID of the user that created the deployment.
            required:
                - id
                - created_at
                - organization_id
                - project_id
                - user_id
                - openapiv3_assets
                - status
        HTTPToolDefinition:
            type: object
            properties:
                apikey_env_var:
                    type: string
                    description: Environment variable for API key
                bearer_env_var:
                    type: string
                    description: Environment variable for bearer token
                body_schema:
                    type: string
                    description: JSON schema for request body
                created_at:
                    type: string
                    description: The creation date of the tool.
                    format: date-time
                description:
                    type: string
                    description: Description of the tool
                headers_schema:
                    type: string
                    description: JSON schema for headers
                http_method:
                    type: string
                    description: HTTP method for the request
                id:
                    type: string
                    description: The ID of the HTTP tool
                name:
                    type: string
                    description: The name of the tool
                password_env_var:
                    type: string
                    description: Environment variable for password
                path:
                    type: string
                    description: Path for the request
                pathparams_schema:
                    type: string
                    description: JSON schema for path parameters
                queries_schema:
                    type: string
                    description: JSON schema for query parameters
                security_type:
                    type: string
                    description: Type of security (http:bearer, http:basic, apikey)
                server_env_var:
                    type: string
                    description: Environment variable for the server URL
                tags:
                    type: array
                    items:
                        type: string
                    description: The tags list for this http tool
                updated_at:
                    type: string
                    description: The last update date of the tool.
                    format: date-time
                username_env_var:
                    type: string
                    description: Environment variable for username
            required:
                - id
                - name
                - description
                - tags
                - server_env_var
                - security_type
                - http_method
                - path
                - created_at
                - updated_at
        InfoResponseBody:
            type: object
            properties:
                active_organization_id:
                    type: string
                organizations:
                    type: array
                    items:
                        $ref: '#/components/schemas/Organization'
                user_email:
                    type: string
                user_id:
                    type: string
            required:
                - user_id
                - user_email
                - active_organization_id
                - organizations
        InstanceResult:
            type: object
            properties:
                environment:
                    $ref: '#/components/schemas/Environment'
                tools:
                    type: array
                    items:
                        $ref: '#/components/schemas/HTTPToolDefinition'
                    description: The list of tools
            required:
                - tools
                - environment
        Key:
            type: object
            properties:
                created_at:
                    type: string
                    description: The creation date of the key.
                    format: date-time
                created_by_user_id:
                    type: string
                    description: The ID of the user who created this key
                id:
                    type: string
                    description: The ID of the key
                name:
                    type: string
                    description: The name of the key
                organization_id:
                    type: string
                    description: The organization ID this key belongs to
                project_id:
                    type: string
                    description: The optional project ID this key is scoped to
                scopes:
                    type: array
                    items:
                        type: string
                    description: List of permission scopes for this key
                token:
                    type: string
                    description: The API token value
                updated_at:
                    type: string
                    description: When the key was last updated.
                    format: date-time
            required:
                - id
                - organization_id
                - created_by_user_id
                - name
                - token
                - scopes
                - created_at
                - updated_at
        ListDeploymentForm:
            type: object
            properties:
                cursor:
                    type: string
                    description: The cursor to fetch results from
        ListDeploymentResult:
            type: object
            properties:
                items:
                    type: array
                    items:
                        $ref: '#/components/schemas/DeploymentSummary'
                    description: A list of deployments
                next_cursor:
                    type: string
                    description: The cursor to fetch results from
                    example: 01jp3f054qc02gbcmpp0qmyzed
            required:
                - items
        ListEnvironmentsResult:
            type: object
            properties:
                environments:
                    type: array
                    items:
                        $ref: '#/components/schemas/Environment'
            description: Result type for listing environments
            required:
                - environments
        ListKeysResult:
            type: object
            properties:
                keys:
                    type: array
                    items:
                        $ref: '#/components/schemas/Key'
            required:
                - keys
        ListToolsResult:
            type: object
            properties:
                next_cursor:
                    type: string
                    description: The cursor to fetch results from
                tools:
                    type: array
                    items:
                        $ref: '#/components/schemas/HTTPToolDefinition'
                    description: The list of tools
            required:
                - tools
        ListToolsetsResult:
            type: object
            properties:
                toolsets:
                    type: array
                    items:
                        $ref: '#/components/schemas/Toolset'
                    description: The list of toolsets
            required:
                - toolsets
        OpenAPIv3DeploymentAsset:
            type: object
            properties:
                asset_id:
                    type: string
                    description: The ID of the uploaded asset.
                id:
                    type: string
                    description: The ID of the deployment asset.
                name:
                    type: string
                    description: The name to give the document as it will be displayed in UIs.
                slug:
                    type: string
                    description: The slug to give the document as it will be displayed in URLs.
            required:
                - id
                - asset_id
                - name
                - slug
        OpenAPIv3DeploymentAssetForm:
            type: object
            properties:
                asset_id:
                    type: string
                    description: The ID of the uploaded asset.
                name:
                    type: string
                    description: The name to give the document as it will be displayed in UIs.
                slug:
                    type: string
                    description: The slug to give the document as it will be displayed in URLs.
            required:
                - asset_id
                - name
                - slug
        Organization:
            type: object
            properties:
                account_type:
                    type: string
                organization_id:
                    type: string
                organization_name:
                    type: string
                organization_slug:
                    type: string
                projects:
                    type: array
                    items:
                        $ref: '#/components/schemas/Project'
            required:
                - organization_id
                - organization_name
                - organization_slug
                - account_type
                - projects
        Project:
            type: object
            properties:
                project_id:
                    type: string
                project_name:
                    type: string
                project_slug:
                    type: string
            required:
                - project_id
                - project_name
                - project_slug
        Toolset:
            type: object
            properties:
                created_at:
                    type: string
                    description: When the toolset was created.
                    format: date-time
                default_environment_id:
                    type: string
                    description: The ID of the environment to use as the default for the toolset
                description:
                    type: string
                    description: Description of the toolset
                http_tool_ids:
                    type: array
                    items:
                        type: string
                    description: List of HTTP tool IDs included in this toolset
                id:
                    type: string
                    description: The ID of the toolset
                name:
                    type: string
                    description: The name of the toolset
                organization_id:
                    type: string
                    description: The organization ID this toolset belongs to
                project_id:
                    type: string
                    description: The project ID this toolset belongs to
                slug:
                    type: string
                    description: The slug of the toolset
                updated_at:
                    type: string
                    description: When the toolset was last updated.
                    format: date-time
            required:
                - id
                - project_id
                - organization_id
                - name
                - slug
                - created_at
                - updated_at
        ToolsetDetails:
            type: object
            properties:
                created_at:
                    type: string
                    description: When the toolset was created.
                    format: date-time
                default_environment_id:
                    type: string
                    description: The ID of the environment to use as the default for the toolset
                description:
                    type: string
                    description: Description of the toolset
                http_tools:
                    type: array
                    items:
                        $ref: '#/components/schemas/HTTPToolDefinition'
                    description: The HTTP tools in this toolset
                id:
                    type: string
                    description: The ID of the toolset
                name:
                    type: string
                    description: The name of the toolset
                organization_id:
                    type: string
                    description: The organization ID this toolset belongs to
                project_id:
                    type: string
                    description: The project ID this toolset belongs to
                slug:
                    type: string
                    description: The slug of the toolset
                updated_at:
                    type: string
                    description: When the toolset was last updated.
                    format: date-time
            required:
                - id
                - project_id
                - organization_id
                - name
                - slug
                - http_tools
                - created_at
                - updated_at
        UpdateEnvironmentForm:
            type: object
            properties:
                description:
                    type: string
                    description: The description of the environment
                entries_to_remove:
                    type: array
                    items:
                        type: string
                    description: List of environment entry names to remove
                entries_to_update:
                    type: array
                    items:
                        $ref: '#/components/schemas/EnvironmentEntryInput'
                    description: List of environment entries to update or create
                name:
                    type: string
                    description: The name of the environment
                slug:
                    type: string
                    description: The slug of the environment to update
            description: Form for updating an environment
            required:
                - slug
                - entries_to_update
                - entries_to_remove
        UpdateEnvironmentRequestBody:
            type: object
            properties:
                description:
                    type: string
                    description: The description of the environment
                entries_to_remove:
                    type: array
                    items:
                        type: string
                    description: List of environment entry names to remove
                entries_to_update:
                    type: array
                    items:
                        $ref: '#/components/schemas/EnvironmentEntryInput'
                    description: List of environment entries to update or create
                name:
                    type: string
                    description: The name of the environment
            required:
                - entries_to_update
                - entries_to_remove
        UpdateToolsetForm:
            type: object
            properties:
                default_environment_id:
                    type: string
                    description: The ID of the environment to use as the default for the toolset
                description:
                    type: string
                    description: The new description of the toolset
                http_tool_ids_to_add:
                    type: array
                    items:
                        type: string
                    description: HTTP tool IDs to add to the toolset
                http_tool_ids_to_remove:
                    type: array
                    items:
                        type: string
                    description: HTTP tool IDs to remove from the toolset
                name:
                    type: string
                    description: The new name of the toolset
                project_slug:
                    type: string
                slug:
                    type: string
                    description: The slug of the toolset to update
            required:
                - slug
        UpdateToolsetRequestBody:
            type: object
            properties:
                default_environment_id:
                    type: string
                    description: The ID of the environment to use as the default for the toolset
                description:
                    type: string
                    description: The new description of the toolset
                http_tool_ids_to_add:
                    type: array
                    items:
                        type: string
                    description: HTTP tool IDs to add to the toolset
                http_tool_ids_to_remove:
                    type: array
                    items:
                        type: string
                    description: HTTP tool IDs to remove from the toolset
                name:
                    type: string
                    description: The new name of the toolset
        UploadOpenAPIv3Form:
            type: object
            properties:
                content_length:
                    type: integer
                    format: int64
                content_type:
                    type: string
                project_slug:
                    type: string
                session_token:
                    type: string
            required:
                - content_type
                - content_length
        UploadOpenAPIv3Result:
            type: object
            properties:
                asset:
                    $ref: '#/components/schemas/Asset'
            required:
                - asset
    securitySchemes:
        apikey_header_Gram-Key:
            type: apiKey
            description: key based auth.
            name: Gram-Key
            in: header
        project_slug_header_Gram-Project:
            type: apiKey
            description: project slug header auth.
            name: Gram-Project
            in: header
        session_header_Gram-Session:
            type: apiKey
            description: Session based auth. By cookie or header.
            name: Gram-Session
            in: header
tags:
    - name: assets
      description: Manages assets used by Gram projects.
    - name: auth
      description: Managed auth for gram producers and dashboard.
    - name: deployments
      description: Manages deployments of tools from upstream sources.
    - name: environments
      description: Managing toolset environments.
    - name: keys
      description: Managing system api keys.
    - name: tools
      description: Dashboard API for interacting with tools.
    - name: instances
      description: Consumer APIs for interacting with all relevant data for an instance of a toolset and environment.
    - name: toolsets
      description: Managed toolsets for gram AI consumers.
