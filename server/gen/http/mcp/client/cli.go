// Code generated by goa v3.20.1, DO NOT EDIT.
//
// mcp HTTP client CLI support package
//
// Command:
// $ goa gen github.com/speakeasy-api/gram/design

package client

import (
	mcp "github.com/speakeasy-api/gram/gen/mcp"
)

// BuildServePublicPayload builds the payload for the mcp servePublic endpoint
// from CLI flags.
func BuildServePublicPayload(mcpServePublicMcpSlug string, mcpServePublicEnvironmentVariables string, mcpServePublicApikeyToken string) (*mcp.ServePublicPayload, error) {
	var mcpSlug string
	{
		mcpSlug = mcpServePublicMcpSlug
	}
	var environmentVariables *string
	{
		if mcpServePublicEnvironmentVariables != "" {
			environmentVariables = &mcpServePublicEnvironmentVariables
		}
	}
	var apikeyToken *string
	{
		if mcpServePublicApikeyToken != "" {
			apikeyToken = &mcpServePublicApikeyToken
		}
	}
	v := &mcp.ServePublicPayload{}
	v.McpSlug = mcpSlug
	v.EnvironmentVariables = environmentVariables
	v.ApikeyToken = apikeyToken

	return v, nil
}

// BuildServeAuthenticatedPayload builds the payload for the mcp
// serveAuthenticated endpoint from CLI flags.
func BuildServeAuthenticatedPayload(mcpServeAuthenticatedProject string, mcpServeAuthenticatedToolset string, mcpServeAuthenticatedEnvironment string, mcpServeAuthenticatedApikeyToken string, mcpServeAuthenticatedEnvironmentVariables string) (*mcp.ServeAuthenticatedPayload, error) {
	var project string
	{
		project = mcpServeAuthenticatedProject
	}
	var toolset string
	{
		toolset = mcpServeAuthenticatedToolset
	}
	var environment string
	{
		environment = mcpServeAuthenticatedEnvironment
	}
	var apikeyToken *string
	{
		if mcpServeAuthenticatedApikeyToken != "" {
			apikeyToken = &mcpServeAuthenticatedApikeyToken
		}
	}
	var environmentVariables *string
	{
		if mcpServeAuthenticatedEnvironmentVariables != "" {
			environmentVariables = &mcpServeAuthenticatedEnvironmentVariables
		}
	}
	v := &mcp.ServeAuthenticatedPayload{}
	v.Project = &project
	v.Toolset = &toolset
	v.Environment = &environment
	v.ApikeyToken = apikeyToken
	v.EnvironmentVariables = environmentVariables

	return v, nil
}
