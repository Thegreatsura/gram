// Code generated by goa v3.20.0, DO NOT EDIT.
//
// auth HTTP server types
//
// Command:
// $ goa gen github.com/speakeasy-api/gram/design

package server

import (
	auth "github.com/speakeasy-api/gram/gen/auth"
)

// AuthSwitchScopesRequestBody is the type of the "auth" service "auth switch
// scopes" endpoint HTTP request body.
type AuthSwitchScopesRequestBody struct {
	// The project id to switch scopes too
	ProjectID *string `form:"project_id,omitempty" json:"project_id,omitempty" xml:"project_id,omitempty"`
}

// AuthInfoResponseBody is the type of the "auth" service "auth info" endpoint
// HTTP response body.
type AuthInfoResponseBody struct {
	UserID           string `form:"user_id" json:"user_id" xml:"user_id"`
	UserEmail        string `form:"user_email" json:"user_email" xml:"user_email"`
	OrganizationSlug string `form:"organization_slug" json:"organization_slug" xml:"organization_slug"`
	OrganizationName string `form:"organization_name" json:"organization_name" xml:"organization_name"`
	AccountType      string `form:"account_type" json:"account_type" xml:"account_type"`
	ProjectID        string `form:"project_id" json:"project_id" xml:"project_id"`
	ProjectName      string `form:"project_name" json:"project_name" xml:"project_name"`
}

// NewAuthInfoResponseBody builds the HTTP response body from the result of the
// "auth info" endpoint of the "auth" service.
func NewAuthInfoResponseBody(res *auth.AuthInfoResult) *AuthInfoResponseBody {
	body := &AuthInfoResponseBody{
		UserID:           res.UserID,
		UserEmail:        res.UserEmail,
		OrganizationSlug: res.OrganizationSlug,
		OrganizationName: res.OrganizationName,
		AccountType:      res.AccountType,
		ProjectID:        res.ProjectID,
		ProjectName:      res.ProjectName,
	}
	return body
}

// NewAuthCallbackPayload builds a auth service auth callback endpoint payload.
func NewAuthCallbackPayload(sharedToken string) *auth.AuthCallbackPayload {
	v := &auth.AuthCallbackPayload{}
	v.SharedToken = sharedToken

	return v
}

// NewAuthSwitchScopesPayload builds a auth service auth switch scopes endpoint
// payload.
func NewAuthSwitchScopesPayload(body *AuthSwitchScopesRequestBody, orgSlug *string, gramSession *string) *auth.AuthSwitchScopesPayload {
	v := &auth.AuthSwitchScopesPayload{
		ProjectID: body.ProjectID,
	}
	v.OrgSlug = orgSlug
	v.GramSession = gramSession

	return v
}

// NewAuthInfoPayload builds a auth service auth info endpoint payload.
func NewAuthInfoPayload(gramSession *string) *auth.AuthInfoPayload {
	v := &auth.AuthInfoPayload{}
	v.GramSession = gramSession

	return v
}
