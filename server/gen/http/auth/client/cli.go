// Code generated by goa v3.20.1, DO NOT EDIT.
//
// auth HTTP client CLI support package
//
// Command:
// $ goa gen github.com/speakeasy-api/gram/design

package client

import (
	auth "github.com/speakeasy-api/gram/gen/auth"
)

// BuildCallbackPayload builds the payload for the auth callback endpoint from
// CLI flags.
func BuildCallbackPayload(authCallbackIDToken string) (*auth.CallbackPayload, error) {
	var idToken string
	{
		idToken = authCallbackIDToken
	}
	v := &auth.CallbackPayload{}
	v.IDToken = idToken

	return v, nil
}

// BuildSwitchScopesPayload builds the payload for the auth switchScopes
// endpoint from CLI flags.
func BuildSwitchScopesPayload(authSwitchScopesOrganizationID string, authSwitchScopesProjectID string, authSwitchScopesSessionToken string) (*auth.SwitchScopesPayload, error) {
	var organizationID *string
	{
		if authSwitchScopesOrganizationID != "" {
			organizationID = &authSwitchScopesOrganizationID
		}
	}
	var projectID *string
	{
		if authSwitchScopesProjectID != "" {
			projectID = &authSwitchScopesProjectID
		}
	}
	var sessionToken *string
	{
		if authSwitchScopesSessionToken != "" {
			sessionToken = &authSwitchScopesSessionToken
		}
	}
	v := &auth.SwitchScopesPayload{}
	v.OrganizationID = organizationID
	v.ProjectID = projectID
	v.SessionToken = sessionToken

	return v, nil
}

// BuildLogoutPayload builds the payload for the auth logout endpoint from CLI
// flags.
func BuildLogoutPayload(authLogoutSessionToken string) (*auth.LogoutPayload, error) {
	var sessionToken *string
	{
		if authLogoutSessionToken != "" {
			sessionToken = &authLogoutSessionToken
		}
	}
	v := &auth.LogoutPayload{}
	v.SessionToken = sessionToken

	return v, nil
}

// BuildInfoPayload builds the payload for the auth info endpoint from CLI
// flags.
func BuildInfoPayload(authInfoSessionToken string) (*auth.InfoPayload, error) {
	var sessionToken *string
	{
		if authInfoSessionToken != "" {
			sessionToken = &authInfoSessionToken
		}
	}
	v := &auth.InfoPayload{}
	v.SessionToken = sessionToken

	return v, nil
}
