// Code generated by goa v3.20.0, DO NOT EDIT.
//
// auth HTTP client CLI support package
//
// Command:
// $ goa gen github.com/speakeasy-api/gram/design

package client

import (
	auth "github.com/speakeasy-api/gram/gen/auth"
)

// BuildAuthCallbackPayload builds the payload for the auth auth callback
// endpoint from CLI flags.
func BuildAuthCallbackPayload(authAuthCallbackSharedToken string) (*auth.AuthCallbackPayload, error) {
	var sharedToken string
	{
		sharedToken = authAuthCallbackSharedToken
	}
	v := &auth.AuthCallbackPayload{}
	v.SharedToken = sharedToken

	return v, nil
}

// BuildAuthSwitchScopesPayload builds the payload for the auth auth switch
// scopes endpoint from CLI flags.
func BuildAuthSwitchScopesPayload(authAuthSwitchScopesOrganizationID string, authAuthSwitchScopesProjectID string, authAuthSwitchScopesGramSession string) (*auth.AuthSwitchScopesPayload, error) {
	var organizationID *string
	{
		if authAuthSwitchScopesOrganizationID != "" {
			organizationID = &authAuthSwitchScopesOrganizationID
		}
	}
	var projectID *string
	{
		if authAuthSwitchScopesProjectID != "" {
			projectID = &authAuthSwitchScopesProjectID
		}
	}
	var gramSession *string
	{
		if authAuthSwitchScopesGramSession != "" {
			gramSession = &authAuthSwitchScopesGramSession
		}
	}
	v := &auth.AuthSwitchScopesPayload{}
	v.OrganizationID = organizationID
	v.ProjectID = projectID
	v.GramSession = gramSession

	return v, nil
}

// BuildAuthLogoutPayload builds the payload for the auth auth logout endpoint
// from CLI flags.
func BuildAuthLogoutPayload(authAuthLogoutGramSession string) (*auth.AuthLogoutPayload, error) {
	var gramSession *string
	{
		if authAuthLogoutGramSession != "" {
			gramSession = &authAuthLogoutGramSession
		}
	}
	v := &auth.AuthLogoutPayload{}
	v.GramSession = gramSession

	return v, nil
}

// BuildAuthInfoPayload builds the payload for the auth auth info endpoint from
// CLI flags.
func BuildAuthInfoPayload(authAuthInfoGramSession string) (*auth.AuthInfoPayload, error) {
	var gramSession *string
	{
		if authAuthInfoGramSession != "" {
			gramSession = &authAuthInfoGramSession
		}
	}
	v := &auth.AuthInfoPayload{}
	v.GramSession = gramSession

	return v, nil
}
