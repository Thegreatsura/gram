// Code generated by goa v3.20.0, DO NOT EDIT.
//
// assets HTTP server types
//
// Command:
// $ goa gen github.com/speakeasy-api/gram/design

package server

import (
	assets "github.com/speakeasy-api/gram/gen/assets"
)

// UploadOpenAPIv3ResponseBody is the type of the "assets" service
// "uploadOpenAPIv3" endpoint HTTP response body.
type UploadOpenAPIv3ResponseBody struct {
	// The URL to the uploaded OpenAPI document
	Asset *AssetResponseBody `form:"asset" json:"asset" xml:"asset"`
}

// AssetResponseBody is used to define fields on response body types.
type AssetResponseBody struct {
	// The ID of the asset
	ID string `form:"id" json:"id" xml:"id"`
	// The URL to the uploaded asset
	URL  string `form:"url" json:"url" xml:"url"`
	Kind string `form:"kind" json:"kind" xml:"kind"`
	// The SHA256 hash of the asset
	Sha256 string `form:"sha256" json:"sha256" xml:"sha256"`
	// The content type of the asset
	ContentType string `form:"content_type" json:"content_type" xml:"content_type"`
	// The content length of the asset
	ContentLength int64 `form:"content_length" json:"content_length" xml:"content_length"`
	// The creation date of the asset.
	CreatedAt string `form:"created_at" json:"created_at" xml:"created_at"`
	// The last update date of the asset.
	UpdatedAt string `form:"updated_at" json:"updated_at" xml:"updated_at"`
}

// NewUploadOpenAPIv3ResponseBody builds the HTTP response body from the result
// of the "uploadOpenAPIv3" endpoint of the "assets" service.
func NewUploadOpenAPIv3ResponseBody(res *assets.UploadOpenAPIv3Result) *UploadOpenAPIv3ResponseBody {
	body := &UploadOpenAPIv3ResponseBody{}
	if res.Asset != nil {
		body.Asset = marshalAssetsAssetToAssetResponseBody(res.Asset)
	}
	return body
}

// NewUploadOpenAPIv3Payload builds a assets service uploadOpenAPIv3 endpoint
// payload.
func NewUploadOpenAPIv3Payload(contentType string, contentLength int64, projectID string, gramSessionToken *string) *assets.UploadOpenAPIv3Payload {
	v := &assets.UploadOpenAPIv3Payload{}
	v.ContentType = contentType
	v.ContentLength = contentLength
	v.ProjectID = projectID
	v.GramSessionToken = gramSessionToken

	return v
}
