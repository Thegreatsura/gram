// Code generated by goa v3.20.1, DO NOT EDIT.
//
// system HTTP client types
//
// Command:
// $ goa gen github.com/speakeasy-api/gram/design

package client

import (
	system "github.com/speakeasy-api/gram/gen/system"
	goa "goa.design/goa/v3/pkg"
)

// HealthCheckResponseBody is the type of the "system" service "healthCheck"
// endpoint HTTP response body.
type HealthCheckResponseBody struct {
	// The status of the service.
	Status *string `form:"status,omitempty" json:"status,omitempty" xml:"status,omitempty"`
}

// NewHealthCheckResultOK builds a "system" service "healthCheck" endpoint
// result from a HTTP "OK" response.
func NewHealthCheckResultOK(body *HealthCheckResponseBody) *system.HealthCheckResult {
	v := &system.HealthCheckResult{
		Status: *body.Status,
	}

	return v
}

// ValidateHealthCheckResponseBody runs the validations defined on
// HealthCheckResponseBody
func ValidateHealthCheckResponseBody(body *HealthCheckResponseBody) (err error) {
	if body.Status == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("status", "body"))
	}
	return
}
