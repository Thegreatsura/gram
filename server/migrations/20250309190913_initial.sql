-- Create pgcrypto extension
create extension if not exists pgcrypto;
-- Create function to generate ULIDs
create or replace function generate_ulid() returns uuid
    as $$
        select (lpad(to_hex(floor(extract(epoch from clock_timestamp()) * 1000)::bigint), 12, '0') || encode(gen_random_bytes(10), 'hex'))::uuid;
    $$ language sql;
-- Create "organizations" table
CREATE TABLE "organizations" ("id" uuid NOT NULL DEFAULT generate_ulid(), "name" text NOT NULL, "slug" text NOT NULL, "created_at" timestamptz NOT NULL DEFAULT now(), "updated_at" timestamptz NOT NULL DEFAULT now(), "deleted_at" timestamptz NULL, "deleted" boolean NOT NULL GENERATED ALWAYS AS (deleted_at IS NOT NULL) STORED, PRIMARY KEY ("id"), CONSTRAINT "organizations_slug_key" UNIQUE ("slug"));
-- Create "users" table
CREATE TABLE "users" ("id" uuid NOT NULL DEFAULT generate_ulid(), "email" text NOT NULL, "verification" uuid NOT NULL DEFAULT generate_ulid(), "verified_at" timestamptz NULL, "created_at" timestamptz NOT NULL DEFAULT now(), "updated_at" timestamptz NOT NULL DEFAULT now(), "deleted_at" timestamptz NULL, "deleted" boolean NOT NULL GENERATED ALWAYS AS (deleted_at IS NOT NULL) STORED, PRIMARY KEY ("id"), CONSTRAINT "users_email_key" UNIQUE ("email"));
-- Create "workspaces" table
CREATE TABLE "workspaces" ("id" uuid NOT NULL DEFAULT generate_ulid(), "name" text NOT NULL, "slug" text NOT NULL, "organization_id" uuid NOT NULL, "created_at" timestamptz NOT NULL DEFAULT now(), "updated_at" timestamptz NOT NULL DEFAULT now(), "deleted_at" timestamptz NULL, "deleted" boolean NOT NULL GENERATED ALWAYS AS (deleted_at IS NOT NULL) STORED, PRIMARY KEY ("id"), CONSTRAINT "workspaces_organization_id_slug_key" UNIQUE ("organization_id", "slug"), CONSTRAINT "workspaces_organization_id_fkey" FOREIGN KEY ("organization_id") REFERENCES "organizations" ("id") ON UPDATE NO ACTION ON DELETE NO ACTION);
-- Create "deployments" table
CREATE TABLE "deployments" ("id" uuid NOT NULL DEFAULT generate_ulid(), "user_id" uuid NOT NULL, "organization_id" uuid NOT NULL, "workspace_id" uuid NOT NULL, "external_id" text NOT NULL, "external_url" text NULL, "git_sha" text NULL, "created_at" timestamptz NOT NULL DEFAULT now(), "updated_at" timestamptz NOT NULL DEFAULT now(), "deleted_at" timestamptz NULL, "deleted" boolean NOT NULL GENERATED ALWAYS AS (deleted_at IS NOT NULL) STORED, PRIMARY KEY ("id"), CONSTRAINT "deployments_organization_id_fkey" FOREIGN KEY ("organization_id") REFERENCES "organizations" ("id") ON UPDATE NO ACTION ON DELETE NO ACTION, CONSTRAINT "deployments_user_id_fkey" FOREIGN KEY ("user_id") REFERENCES "users" ("id") ON UPDATE NO ACTION ON DELETE NO ACTION, CONSTRAINT "deployments_workspace_id_fkey" FOREIGN KEY ("workspace_id") REFERENCES "workspaces" ("id") ON UPDATE NO ACTION ON DELETE NO ACTION);
-- Create "memberships" table
CREATE TABLE "memberships" ("id" uuid NOT NULL DEFAULT generate_ulid(), "user_id" uuid NOT NULL, "organization_id" uuid NOT NULL, "role" text NOT NULL, "created_at" timestamptz NOT NULL DEFAULT now(), "updated_at" timestamptz NOT NULL DEFAULT now(), "deleted_at" timestamptz NULL, "deleted" boolean NOT NULL GENERATED ALWAYS AS (deleted_at IS NOT NULL) STORED, PRIMARY KEY ("id"), CONSTRAINT "memberships_user_id_organization_id_key" UNIQUE ("user_id", "organization_id", "deleted"), CONSTRAINT "memberships_organization_id_fkey" FOREIGN KEY ("organization_id") REFERENCES "organizations" ("id") ON UPDATE NO ACTION ON DELETE NO ACTION, CONSTRAINT "memberships_user_id_fkey" FOREIGN KEY ("user_id") REFERENCES "users" ("id") ON UPDATE NO ACTION ON DELETE NO ACTION);
