name: Validate Cloud Secrets
description: Validates that all cloud secrets defined in mise.toml exist in corresponding GCP projects.

# Trigger on pushes or pull requests to the main branch, or manually
# on:
#   pull_request:
#     branches:
#       - main
#       # Add other branches if needed
#   push:
#     branches:
#       - main # Also run on merge to main for visibility
#   workflow_dispatch: # Allow manual trigger

jobs:
  validate-cloud-secrets:
    name: Validate Cloud Secrets Readiness
    runs-on: ubuntu-latest

    permissions:
      contents: read      # Allow checkout
      id-token: write    # Allow OIDC auth with Google Cloud
      pull-requests: write # Allow creating/updating PR comments

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Mise
        uses: jdx/mise-action@7a111ead46986ccad89a74ad013ba2a7c08c9e67 # v2.2.1
        with:
          install: true # Ensure mise and configured tools are installed
          cache: true   # Enable caching for mise installations

      - name: Authenticate to Google Cloud
        id: auth
        uses: google-github-actions/auth@ba79af03959ebeac9769e648f473a284504d9193 # v2.1.10
        with:
          token_format: "access_token"
          workload_identity_provider: "projects/409661704476/locations/global/workloadIdentityPools/ga-pool/providers/github-oidc-provider" # User provided
          service_account: "speakeasy-registry-ga-ci@linen-analyst-344721.iam.gserviceaccount.com"
          export_environment_variables: 'true'
          create_credentials_file: 'true'

      - name: Run Secret Validation Script via mise
        id: validate_secrets
        continue-on-error: true
        run: |
          mise run gcp:ready

      - name: Find Previous Comment
        # Only run if the event is a pull request and the validation script potentially failed
        if: github.event_name == 'pull_request' && steps.validate_secrets.outcome != 'success'
        uses: peter-evans/find-comment@v3
        id: fc
        with:
          issue-number: ${{ github.event.pull_request.number }}
          comment-author: 'github-actions[bot]'
          body-includes: '' # Match marker from script

      - name: Create or Update Comment with Errors
        if: github.event_name == 'pull_request' && env.SECRET_CHECK_COMMENT != ''
        uses: peter-evans/create-or-update-comment@v4
        with:
          comment-id: ${{ steps.fc.outputs.comment-id }}
          issue-number: ${{ github.event.pull_request.number }}
          body: ${{ env.SECRET_CHECK_COMMENT }}
          edit-mode: replace
      - name: Check script outcome and fail job if needed
        if: steps.validate_secrets.outcome == 'failure'
        run: |
          echo "::error::Secret validation script failed. See previous steps for logs and PR comment (if applicable) for details."
          exit 1 # Explicitly fail the job

      - name: Validation Successful
        if: steps.validate_secrets.outcome == 'success'
        run: echo "Secret validation script completed successfully."