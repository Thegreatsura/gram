name: 'Build and Push image'
description: 'Composite action to generate registry images'

inputs:
  registry:
    description: 'Image registry to use'
    required: true
    default: 'gcr.io/linen-analyst-344721'
  username:
    description: 'Username to the image registry'
    required: true
  password:
    description: 'Password for the image registry'
    required: true
  image:
    description: 'Docker image to build'
    required: true
  context:
    description: 'Context to docker build'
    required: true
    default: '.'
  file:
    description: 'Path to the docker file relative to context'
    required: true
  build-args:
    description: 'Build arguments for docker'
    required: false
  git-auth-token:
    description: 'The GitHub access token for accessing private repos'
    required: true

outputs:
  image-tag:
    description: 'Final image tag built and pushed'
    value: ${{ steps.set-tag.outputs.image-tag }}

runs:
  using: 'composite'
  steps:
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Extract Docker metadata
      id: meta
      uses: docker/metadata-action@v4.0.0
      with:
        images: ${{ inputs.registry }}/${{ inputs.image }}
        tags: |
          type=ref,event=branch
          type=ref,event=tag
          type=ref,event=pr
          type=schedule,pattern=nightly
          type=sha
          type=sha,format=long

    - name: Construct SERVER_VERSION
      shell: bash
      run: echo "SERVER_VERSION=$(date +'%Y-%m-%d')-$(echo $GITHUB_SHA | cut -c1-8)" >> $GITHUB_ENV

    - name: Build and push registry Docker image
      uses: docker/build-push-action@v6
      with:
        context: ${{ inputs.context }}
        file: ${{ inputs.file }}
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        build-args: |
          ${{ inputs.build-args }}
          SERVER_VERSION=${{ env.SERVER_VERSION }}
        secrets: |
          git_auth_token=${{ inputs.git-auth-token }}
        cache-from: type=registry,ref=${{ inputs.registry }}/${{ inputs.image }}:latest
        cache-to: type=registry,ref=${{ inputs.registry }}/${{ inputs.image }}:latest,mode=max,enable=${{ github.event_name == 'merge_group' }}

    - name: Set output image tag
      id: set-tag
      shell: bash
      run: |
        IMAGE_TAG=$(echo "${{ steps.meta.outputs.tags }}" | head -n 1)
        echo "image-tag=$IMAGE_TAG" >> $GITHUB_OUTPUT
