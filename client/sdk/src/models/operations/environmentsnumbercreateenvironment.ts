/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import * as components from "../components/index.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type EnvironmentsNumberCreateEnvironmentRequest = {
  /**
   * Session header
   */
  gramSession?: string | undefined;
  /**
   * project header
   */
  gramProject?: string | undefined;
  createEnvironmentForm: components.CreateEnvironmentForm;
};

/** @internal */
export const EnvironmentsNumberCreateEnvironmentRequest$inboundSchema:
  z.ZodType<EnvironmentsNumberCreateEnvironmentRequest, z.ZodTypeDef, unknown> =
    z.object({
      "Gram-Session": z.string().optional(),
      "Gram-Project": z.string().optional(),
      CreateEnvironmentForm: components.CreateEnvironmentForm$inboundSchema,
    }).transform((v) => {
      return remap$(v, {
        "Gram-Session": "gramSession",
        "Gram-Project": "gramProject",
        "CreateEnvironmentForm": "createEnvironmentForm",
      });
    });

/** @internal */
export type EnvironmentsNumberCreateEnvironmentRequest$Outbound = {
  "Gram-Session"?: string | undefined;
  "Gram-Project"?: string | undefined;
  CreateEnvironmentForm: components.CreateEnvironmentForm$Outbound;
};

/** @internal */
export const EnvironmentsNumberCreateEnvironmentRequest$outboundSchema:
  z.ZodType<
    EnvironmentsNumberCreateEnvironmentRequest$Outbound,
    z.ZodTypeDef,
    EnvironmentsNumberCreateEnvironmentRequest
  > = z.object({
    gramSession: z.string().optional(),
    gramProject: z.string().optional(),
    createEnvironmentForm: components.CreateEnvironmentForm$outboundSchema,
  }).transform((v) => {
    return remap$(v, {
      gramSession: "Gram-Session",
      gramProject: "Gram-Project",
      createEnvironmentForm: "CreateEnvironmentForm",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace EnvironmentsNumberCreateEnvironmentRequest$ {
  /** @deprecated use `EnvironmentsNumberCreateEnvironmentRequest$inboundSchema` instead. */
  export const inboundSchema =
    EnvironmentsNumberCreateEnvironmentRequest$inboundSchema;
  /** @deprecated use `EnvironmentsNumberCreateEnvironmentRequest$outboundSchema` instead. */
  export const outboundSchema =
    EnvironmentsNumberCreateEnvironmentRequest$outboundSchema;
  /** @deprecated use `EnvironmentsNumberCreateEnvironmentRequest$Outbound` instead. */
  export type Outbound = EnvironmentsNumberCreateEnvironmentRequest$Outbound;
}

export function environmentsNumberCreateEnvironmentRequestToJSON(
  environmentsNumberCreateEnvironmentRequest:
    EnvironmentsNumberCreateEnvironmentRequest,
): string {
  return JSON.stringify(
    EnvironmentsNumberCreateEnvironmentRequest$outboundSchema.parse(
      environmentsNumberCreateEnvironmentRequest,
    ),
  );
}

export function environmentsNumberCreateEnvironmentRequestFromJSON(
  jsonString: string,
): SafeParseResult<
  EnvironmentsNumberCreateEnvironmentRequest,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      EnvironmentsNumberCreateEnvironmentRequest$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'EnvironmentsNumberCreateEnvironmentRequest' from JSON`,
  );
}
