/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type AssetsNumberUploadOpenAPIv3Request = {
  contentLength: number;
  /**
   * The project ID the OpenAPI document belongs to
   */
  gramProjectID: string;
  /**
   * Session header
   */
  xGramSession?: string | undefined;
};

/** @internal */
export const AssetsNumberUploadOpenAPIv3Request$inboundSchema: z.ZodType<
  AssetsNumberUploadOpenAPIv3Request,
  z.ZodTypeDef,
  unknown
> = z.object({
  "Content-Length": z.number().int(),
  "Gram-Project-ID": z.string(),
  "X-Gram-Session": z.string().optional(),
}).transform((v) => {
  return remap$(v, {
    "Content-Length": "contentLength",
    "Gram-Project-ID": "gramProjectID",
    "X-Gram-Session": "xGramSession",
  });
});

/** @internal */
export type AssetsNumberUploadOpenAPIv3Request$Outbound = {
  "Content-Length": number;
  "Gram-Project-ID": string;
  "X-Gram-Session"?: string | undefined;
};

/** @internal */
export const AssetsNumberUploadOpenAPIv3Request$outboundSchema: z.ZodType<
  AssetsNumberUploadOpenAPIv3Request$Outbound,
  z.ZodTypeDef,
  AssetsNumberUploadOpenAPIv3Request
> = z.object({
  contentLength: z.number().int(),
  gramProjectID: z.string(),
  xGramSession: z.string().optional(),
}).transform((v) => {
  return remap$(v, {
    contentLength: "Content-Length",
    gramProjectID: "Gram-Project-ID",
    xGramSession: "X-Gram-Session",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AssetsNumberUploadOpenAPIv3Request$ {
  /** @deprecated use `AssetsNumberUploadOpenAPIv3Request$inboundSchema` instead. */
  export const inboundSchema = AssetsNumberUploadOpenAPIv3Request$inboundSchema;
  /** @deprecated use `AssetsNumberUploadOpenAPIv3Request$outboundSchema` instead. */
  export const outboundSchema =
    AssetsNumberUploadOpenAPIv3Request$outboundSchema;
  /** @deprecated use `AssetsNumberUploadOpenAPIv3Request$Outbound` instead. */
  export type Outbound = AssetsNumberUploadOpenAPIv3Request$Outbound;
}

export function assetsNumberUploadOpenAPIv3RequestToJSON(
  assetsNumberUploadOpenAPIv3Request: AssetsNumberUploadOpenAPIv3Request,
): string {
  return JSON.stringify(
    AssetsNumberUploadOpenAPIv3Request$outboundSchema.parse(
      assetsNumberUploadOpenAPIv3Request,
    ),
  );
}

export function assetsNumberUploadOpenAPIv3RequestFromJSON(
  jsonString: string,
): SafeParseResult<AssetsNumberUploadOpenAPIv3Request, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      AssetsNumberUploadOpenAPIv3Request$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'AssetsNumberUploadOpenAPIv3Request' from JSON`,
  );
}
