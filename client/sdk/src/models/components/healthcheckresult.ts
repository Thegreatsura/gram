/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type HealthCheckResult = {
  /**
   * The status of the service.
   */
  status: string;
};

/** @internal */
export const HealthCheckResult$inboundSchema: z.ZodType<
  HealthCheckResult,
  z.ZodTypeDef,
  unknown
> = z.object({
  status: z.string(),
});

/** @internal */
export type HealthCheckResult$Outbound = {
  status: string;
};

/** @internal */
export const HealthCheckResult$outboundSchema: z.ZodType<
  HealthCheckResult$Outbound,
  z.ZodTypeDef,
  HealthCheckResult
> = z.object({
  status: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace HealthCheckResult$ {
  /** @deprecated use `HealthCheckResult$inboundSchema` instead. */
  export const inboundSchema = HealthCheckResult$inboundSchema;
  /** @deprecated use `HealthCheckResult$outboundSchema` instead. */
  export const outboundSchema = HealthCheckResult$outboundSchema;
  /** @deprecated use `HealthCheckResult$Outbound` instead. */
  export type Outbound = HealthCheckResult$Outbound;
}

export function healthCheckResultToJSON(
  healthCheckResult: HealthCheckResult,
): string {
  return JSON.stringify(
    HealthCheckResult$outboundSchema.parse(healthCheckResult),
  );
}

export function healthCheckResultFromJSON(
  jsonString: string,
): SafeParseResult<HealthCheckResult, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => HealthCheckResult$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'HealthCheckResult' from JSON`,
  );
}
