/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { keysKeysNumberCreateKey } from "../funcs/keysKeysNumberCreateKey.js";
import { keysKeysNumberListKeys } from "../funcs/keysKeysNumberListKeys.js";
import { keysKeysNumberRevokeKey } from "../funcs/keysKeysNumberRevokeKey.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as components from "../models/components/index.js";
import * as operations from "../models/operations/index.js";
import { unwrapAsync } from "../types/fp.js";

export class Keys extends ClientSDK {
  /**
   * createKey keys
   *
   * @remarks
   * Create a new api key
   */
  async keysNumberCreateKey(
    request: operations.KeysNumberCreateKeyRequest,
    options?: RequestOptions,
  ): Promise<components.Key> {
    return unwrapAsync(keysKeysNumberCreateKey(
      this,
      request,
      options,
    ));
  }

  /**
   * listKeys keys
   *
   * @remarks
   * List all api keys for an organization
   */
  async keysNumberListKeys(
    request?: operations.KeysNumberListKeysRequest | undefined,
    options?: RequestOptions,
  ): Promise<components.ListKeysResult> {
    return unwrapAsync(keysKeysNumberListKeys(
      this,
      request,
      options,
    ));
  }

  /**
   * revokeKey keys
   *
   * @remarks
   * Revoke a api key
   */
  async keysNumberRevokeKey(
    request: operations.KeysNumberRevokeKeyRequest,
    options?: RequestOptions,
  ): Promise<void> {
    return unwrapAsync(keysKeysNumberRevokeKey(
      this,
      request,
      options,
    ));
  }
}
