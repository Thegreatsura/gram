/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { environmentsCreate } from "../funcs/environmentsCreate.js";
import { environmentsDeleteBySlug } from "../funcs/environmentsDeleteBySlug.js";
import { environmentsList } from "../funcs/environmentsList.js";
import { environmentsUpdateBySlug } from "../funcs/environmentsUpdateBySlug.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as components from "../models/components/index.js";
import * as operations from "../models/operations/index.js";
import { unwrapAsync } from "../types/fp.js";

export class Environments extends ClientSDK {
  /**
   * createEnvironment environments
   *
   * @remarks
   * Create a new environment
   */
  async create(
    request: operations.CreateEnvironmentRequest,
    options?: RequestOptions,
  ): Promise<components.Environment> {
    return unwrapAsync(environmentsCreate(
      this,
      request,
      options,
    ));
  }

  /**
   * deleteEnvironment environments
   *
   * @remarks
   * Delete an environment
   */
  async deleteBySlug(
    request: operations.DeleteEnvironmentRequest,
    options?: RequestOptions,
  ): Promise<void> {
    return unwrapAsync(environmentsDeleteBySlug(
      this,
      request,
      options,
    ));
  }

  /**
   * listEnvironments environments
   *
   * @remarks
   * List all environments for an organization
   */
  async list(
    request?: operations.ListEnvironmentsRequest | undefined,
    options?: RequestOptions,
  ): Promise<components.ListEnvironmentsResult> {
    return unwrapAsync(environmentsList(
      this,
      request,
      options,
    ));
  }

  /**
   * updateEnvironment environments
   *
   * @remarks
   * Update an environment
   */
  async updateBySlug(
    request: operations.UpdateEnvironmentRequest,
    options?: RequestOptions,
  ): Promise<components.Environment> {
    return unwrapAsync(environmentsUpdateBySlug(
      this,
      request,
      options,
    ));
  }
}
