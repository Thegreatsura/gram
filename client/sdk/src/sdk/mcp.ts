/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { mcpMcpNumberServeAuthenticated } from "../funcs/mcpMcpNumberServeAuthenticated.js";
import { mcpMcpNumberServePublic } from "../funcs/mcpMcpNumberServePublic.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as operations from "../models/operations/index.js";
import { unwrapAsync } from "../types/fp.js";

export class Mcp extends ClientSDK {
  /**
   * serveAuthenticated mcp
   *
   * @remarks
   * MCP server endpoint for a toolset (environment as path param, authenticated).
   */
  async mcpNumberServeAuthenticated(
    request: operations.McpNumberServeAuthenticatedRequest,
    security?: operations.McpNumberServeAuthenticatedSecurity | undefined,
    options?: RequestOptions,
  ): Promise<operations.McpNumberServeAuthenticatedResponse | undefined> {
    return unwrapAsync(mcpMcpNumberServeAuthenticated(
      this,
      request,
      security,
      options,
    ));
  }

  /**
   * servePublic mcp
   *
   * @remarks
   * MCP server endpoint for a toolset (public, no environment param).
   */
  async mcpNumberServePublic(
    request: operations.McpNumberServePublicRequest,
    options?: RequestOptions,
  ): Promise<operations.McpNumberServePublicResponse | undefined> {
    return unwrapAsync(mcpMcpNumberServePublic(
      this,
      request,
      options,
    ));
  }
}
