/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { packagesCreate } from "../funcs/packagesCreate.js";
import { packagesListVersions } from "../funcs/packagesListVersions.js";
import { packagesPublish } from "../funcs/packagesPublish.js";
import { packagesUpdate } from "../funcs/packagesUpdate.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as components from "../models/components/index.js";
import * as operations from "../models/operations/index.js";
import { unwrapAsync } from "../types/fp.js";

export class Packages extends ClientSDK {
  /**
   * createPackage packages
   *
   * @remarks
   * Create a new package for a project.
   */
  async create(
    request: operations.CreatePackageRequest,
    options?: RequestOptions,
  ): Promise<components.CreatePackageResult> {
    return unwrapAsync(packagesCreate(
      this,
      request,
      options,
    ));
  }

  /**
   * listVersions packages
   *
   * @remarks
   * List published versions of a package.
   */
  async listVersions(
    request: operations.ListVersionsRequest,
    options?: RequestOptions,
  ): Promise<components.ListVersionsResult> {
    return unwrapAsync(packagesListVersions(
      this,
      request,
      options,
    ));
  }

  /**
   * publish packages
   *
   * @remarks
   * Publish a new version of a package.
   */
  async publish(
    request: operations.PublishRequest,
    options?: RequestOptions,
  ): Promise<components.PublishPackageResult> {
    return unwrapAsync(packagesPublish(
      this,
      request,
      options,
    ));
  }

  /**
   * updatePackage packages
   *
   * @remarks
   * Update package details.
   */
  async update(
    request: operations.UpdatePackageRequest,
    options?: RequestOptions,
  ): Promise<operations.UpdatePackageResponse> {
    return unwrapAsync(packagesUpdate(
      this,
      request,
      options,
    ));
  }
}
