/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { chatCreditUsage } from "../funcs/chatCreditUsage.js";
import { chatList } from "../funcs/chatList.js";
import { chatLoad } from "../funcs/chatLoad.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as components from "../models/components/index.js";
import * as operations from "../models/operations/index.js";
import { unwrapAsync } from "../types/fp.js";

export class Chat extends ClientSDK {
  /**
   * creditUsage chat
   *
   * @remarks
   * Load a chat by its ID
   */
  async creditUsage(
    request?: operations.CreditUsageRequest | undefined,
    security?: operations.CreditUsageSecurity | undefined,
    options?: RequestOptions,
  ): Promise<components.CreditUsageResponseBody> {
    return unwrapAsync(chatCreditUsage(
      this,
      request,
      security,
      options,
    ));
  }

  /**
   * listChats chat
   *
   * @remarks
   * List all chats for a project
   */
  async list(
    request?: operations.ListChatsRequest | undefined,
    security?: operations.ListChatsSecurity | undefined,
    options?: RequestOptions,
  ): Promise<components.ListChatsResult> {
    return unwrapAsync(chatList(
      this,
      request,
      security,
      options,
    ));
  }

  /**
   * loadChat chat
   *
   * @remarks
   * Load a chat by its ID
   */
  async load(
    request: operations.LoadChatRequest,
    security?: operations.LoadChatSecurity | undefined,
    options?: RequestOptions,
  ): Promise<components.Chat> {
    return unwrapAsync(chatLoad(
      this,
      request,
      security,
      options,
    ));
  }
}
