/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { toolsetsToolsetsNumberCreateToolset } from "../funcs/toolsetsToolsetsNumberCreateToolset.js";
import { toolsetsToolsetsNumberGetToolsetDetails } from "../funcs/toolsetsToolsetsNumberGetToolsetDetails.js";
import { toolsetsToolsetsNumberListToolsets } from "../funcs/toolsetsToolsetsNumberListToolsets.js";
import { toolsetsToolsetsNumberUpdateToolset } from "../funcs/toolsetsToolsetsNumberUpdateToolset.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as components from "../models/components/index.js";
import * as operations from "../models/operations/index.js";
import { unwrapAsync } from "../types/fp.js";

export class Toolsets extends ClientSDK {
  /**
   * createToolset toolsets
   *
   * @remarks
   * Create a new toolset with associated tools
   */
  async toolsetsNumberCreateToolset(
    request: operations.ToolsetsNumberCreateToolsetRequest,
    options?: RequestOptions,
  ): Promise<components.Toolset> {
    return unwrapAsync(toolsetsToolsetsNumberCreateToolset(
      this,
      request,
      options,
    ));
  }

  /**
   * getToolsetDetails toolsets
   *
   * @remarks
   * Get detailed information about a toolset including full HTTP tool definitions
   */
  async toolsetsNumberGetToolsetDetails(
    request: operations.ToolsetsNumberGetToolsetDetailsRequest,
    options?: RequestOptions,
  ): Promise<components.ToolsetDetails> {
    return unwrapAsync(toolsetsToolsetsNumberGetToolsetDetails(
      this,
      request,
      options,
    ));
  }

  /**
   * listToolsets toolsets
   *
   * @remarks
   * List all toolsets for a project
   */
  async toolsetsNumberListToolsets(
    request: operations.ToolsetsNumberListToolsetsRequest,
    options?: RequestOptions,
  ): Promise<components.ListToolsetsResult> {
    return unwrapAsync(toolsetsToolsetsNumberListToolsets(
      this,
      request,
      options,
    ));
  }

  /**
   * updateToolset toolsets
   *
   * @remarks
   * Update a toolset's properties including name, description, and HTTP tools
   */
  async toolsetsNumberUpdateToolset(
    request: operations.ToolsetsNumberUpdateToolsetRequest,
    options?: RequestOptions,
  ): Promise<components.Toolset> {
    return unwrapAsync(toolsetsToolsetsNumberUpdateToolset(
      this,
      request,
      options,
    ));
  }
}
