/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import * as components from "../components/index.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type DeploymentsNumberAddOpenAPIv3SourceRequest = {
  /**
   * Session header
   */
  gramSession?: string | undefined;
  /**
   * project header
   */
  gramProject?: string | undefined;
  openAPIv3DeploymentAssetForm: components.OpenAPIv3DeploymentAssetForm;
};

/** @internal */
export const DeploymentsNumberAddOpenAPIv3SourceRequest$inboundSchema:
  z.ZodType<DeploymentsNumberAddOpenAPIv3SourceRequest, z.ZodTypeDef, unknown> =
    z.object({
      "Gram-Session": z.string().optional(),
      "Gram-Project": z.string().optional(),
      OpenAPIv3DeploymentAssetForm:
        components.OpenAPIv3DeploymentAssetForm$inboundSchema,
    }).transform((v) => {
      return remap$(v, {
        "Gram-Session": "gramSession",
        "Gram-Project": "gramProject",
        "OpenAPIv3DeploymentAssetForm": "openAPIv3DeploymentAssetForm",
      });
    });

/** @internal */
export type DeploymentsNumberAddOpenAPIv3SourceRequest$Outbound = {
  "Gram-Session"?: string | undefined;
  "Gram-Project"?: string | undefined;
  OpenAPIv3DeploymentAssetForm:
    components.OpenAPIv3DeploymentAssetForm$Outbound;
};

/** @internal */
export const DeploymentsNumberAddOpenAPIv3SourceRequest$outboundSchema:
  z.ZodType<
    DeploymentsNumberAddOpenAPIv3SourceRequest$Outbound,
    z.ZodTypeDef,
    DeploymentsNumberAddOpenAPIv3SourceRequest
  > = z.object({
    gramSession: z.string().optional(),
    gramProject: z.string().optional(),
    openAPIv3DeploymentAssetForm:
      components.OpenAPIv3DeploymentAssetForm$outboundSchema,
  }).transform((v) => {
    return remap$(v, {
      gramSession: "Gram-Session",
      gramProject: "Gram-Project",
      openAPIv3DeploymentAssetForm: "OpenAPIv3DeploymentAssetForm",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DeploymentsNumberAddOpenAPIv3SourceRequest$ {
  /** @deprecated use `DeploymentsNumberAddOpenAPIv3SourceRequest$inboundSchema` instead. */
  export const inboundSchema =
    DeploymentsNumberAddOpenAPIv3SourceRequest$inboundSchema;
  /** @deprecated use `DeploymentsNumberAddOpenAPIv3SourceRequest$outboundSchema` instead. */
  export const outboundSchema =
    DeploymentsNumberAddOpenAPIv3SourceRequest$outboundSchema;
  /** @deprecated use `DeploymentsNumberAddOpenAPIv3SourceRequest$Outbound` instead. */
  export type Outbound = DeploymentsNumberAddOpenAPIv3SourceRequest$Outbound;
}

export function deploymentsNumberAddOpenAPIv3SourceRequestToJSON(
  deploymentsNumberAddOpenAPIv3SourceRequest:
    DeploymentsNumberAddOpenAPIv3SourceRequest,
): string {
  return JSON.stringify(
    DeploymentsNumberAddOpenAPIv3SourceRequest$outboundSchema.parse(
      deploymentsNumberAddOpenAPIv3SourceRequest,
    ),
  );
}

export function deploymentsNumberAddOpenAPIv3SourceRequestFromJSON(
  jsonString: string,
): SafeParseResult<
  DeploymentsNumberAddOpenAPIv3SourceRequest,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      DeploymentsNumberAddOpenAPIv3SourceRequest$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'DeploymentsNumberAddOpenAPIv3SourceRequest' from JSON`,
  );
}
